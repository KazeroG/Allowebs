/******/ (function (modules) {
  // webpackBootstrap
  /******/ // The module cache
  /******/ var installedModules = {}; // The require function
  /******/
  /******/ /******/ function __webpack_require__(moduleId) {
    /******/
    /******/ // Check if module is in cache
    /******/ if (installedModules[moduleId]) {
      /******/ return installedModules[moduleId].exports;
      /******/
    } // Create a new module (and put it into the cache)
    /******/ /******/ var module = (installedModules[moduleId] = {
      /******/ i: moduleId,
      /******/ l: false,
      /******/ exports: {},
      /******/
    }); // Execute the module function
    /******/
    /******/ /******/ modules[moduleId].call(module.exports, module, module.exports, __webpack_require__); // Flag the module as loaded
    /******/
    /******/ /******/ module.l = true; // Return the exports of the module
    /******/
    /******/ /******/ return module.exports;
    /******/
  } // expose the modules object (__webpack_modules__)
  /******/
  /******/
  /******/ /******/ __webpack_require__.m = modules; // expose the module cache
  /******/
  /******/ /******/ __webpack_require__.c = installedModules; // define getter function for harmony exports
  /******/
  /******/ /******/ __webpack_require__.d = function (exports, name, getter) {
    /******/ if (!__webpack_require__.o(exports, name)) {
      /******/ Object.defineProperty(exports, name, {
        enumerable: true,
        get: getter,
      });
      /******/
    }
    /******/
  }; // define __esModule on exports
  /******/
  /******/ /******/ __webpack_require__.r = function (exports) {
    /******/ if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
      /******/ Object.defineProperty(exports, Symbol.toStringTag, {
        value: "Module",
      });
      /******/
    }
    /******/ Object.defineProperty(exports, "__esModule", { value: true });
    /******/
  }; // create a fake namespace object // mode & 1: value is a module id, require it // mode & 2: merge all properties of value into the ns // mode & 4: return value when already ns object // mode & 8|1: behave like require
  /******/
  /******/ /******/ /******/ /******/ /******/ /******/ __webpack_require__.t = function (value, mode) {
    /******/ if (mode & 1) value = __webpack_require__(value);
    /******/ if (mode & 8) return value;
    /******/ if (mode & 4 && typeof value === "object" && value && value.__esModule) return value;
    /******/ var ns = Object.create(null);
    /******/ __webpack_require__.r(ns);
    /******/ Object.defineProperty(ns, "default", {
      enumerable: true,
      value: value,
    });
    /******/ if (mode & 2 && typeof value != "string")
      for (var key in value)
        __webpack_require__.d(
          ns,
          key,
          function (key) {
            return value[key];
          }.bind(null, key)
        );
    /******/ return ns;
    /******/
  }; // getDefaultExport function for compatibility with non-harmony modules
  /******/
  /******/ /******/ __webpack_require__.n = function (module) {
    /******/ var getter =
      module && module.__esModule
        ? /******/ function getDefault() {
            return module["default"];
          }
        : /******/ function getModuleExports() {
            return module;
          };
    /******/ __webpack_require__.d(getter, "a", getter);
    /******/ return getter;
    /******/
  }; // Object.prototype.hasOwnProperty.call
  /******/
  /******/ /******/ __webpack_require__.o = function (object, property) {
    return Object.prototype.hasOwnProperty.call(object, property);
  }; // __webpack_public_path__
  /******/
  /******/ /******/ __webpack_require__.p = ""; // Load entry module and return exports
  /******/
  /******/
  /******/ /******/ return __webpack_require__((__webpack_require__.s = "./js/main.js"));
  /******/
})(
  /************************************************************************/
  /******/ {
    /***/ "../node_modules/@juggle/resize-observer/lib/DOMRectReadOnly.js":
      /*!**********************************************************************!*\
  !*** ../node_modules/@juggle/resize-observer/lib/DOMRectReadOnly.js ***!
  \**********************************************************************/
      /*! exports provided: DOMRectReadOnly */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DOMRectReadOnly", function () {
          return DOMRectReadOnly;
        });
        var DOMRectReadOnly = (function () {
          function DOMRectReadOnly(x, y, width, height) {
            this.x = x;
            this.y = y;
            this.width = width;
            this.height = height;
            this.top = this.y;
            this.left = this.x;
            this.bottom = this.top + this.height;
            this.right = this.left + this.width;
            return Object.freeze(this);
          }
          DOMRectReadOnly.prototype.toJSON = function () {
            var _a = this,
              x = _a.x,
              y = _a.y,
              top = _a.top,
              right = _a.right,
              bottom = _a.bottom,
              left = _a.left,
              width = _a.width,
              height = _a.height;
            return {
              x: x,
              y: y,
              top: top,
              right: right,
              bottom: bottom,
              left: left,
              width: width,
              height: height,
            };
          };
          DOMRectReadOnly.fromRect = function (rectangle) {
            return new DOMRectReadOnly(rectangle.x, rectangle.y, rectangle.width, rectangle.height);
          };
          return DOMRectReadOnly;
        })();

        /***/
      },

    /***/ "../node_modules/@juggle/resize-observer/lib/ResizeObservation.js":
      /*!************************************************************************!*\
  !*** ../node_modules/@juggle/resize-observer/lib/ResizeObservation.js ***!
  \************************************************************************/
      /*! exports provided: ResizeObservation */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ResizeObservation", function () {
          return ResizeObservation;
        });
        /* harmony import */ var _ResizeObserverBoxOptions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ResizeObserverBoxOptions */ "../node_modules/@juggle/resize-observer/lib/ResizeObserverBoxOptions.js");
        /* harmony import */ var _algorithms_calculateBoxSize__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./algorithms/calculateBoxSize */ "../node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js");
        /* harmony import */ var _utils_element__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/element */ "../node_modules/@juggle/resize-observer/lib/utils/element.js");

        var skipNotifyOnElement = function (target) {
          return !Object(_utils_element__WEBPACK_IMPORTED_MODULE_2__["isSVG"])(target) && !Object(_utils_element__WEBPACK_IMPORTED_MODULE_2__["isReplacedElement"])(target) && getComputedStyle(target).display === "inline";
        };
        var ResizeObservation = (function () {
          function ResizeObservation(target, observedBox) {
            this.target = target;
            this.observedBox = observedBox || _ResizeObserverBoxOptions__WEBPACK_IMPORTED_MODULE_0__["ResizeObserverBoxOptions"].CONTENT_BOX;
            this.lastReportedSize = {
              inlineSize: 0,
              blockSize: 0,
            };
          }
          ResizeObservation.prototype.isActive = function () {
            var size = Object(_algorithms_calculateBoxSize__WEBPACK_IMPORTED_MODULE_1__["calculateBoxSize"])(this.target, this.observedBox, true);
            if (skipNotifyOnElement(this.target)) {
              this.lastReportedSize = size;
            }
            if (this.lastReportedSize.inlineSize !== size.inlineSize || this.lastReportedSize.blockSize !== size.blockSize) {
              return true;
            }
            return false;
          };
          return ResizeObservation;
        })();

        /***/
      },

    /***/ "../node_modules/@juggle/resize-observer/lib/ResizeObserver.js":
      /*!*********************************************************************!*\
  !*** ../node_modules/@juggle/resize-observer/lib/ResizeObserver.js ***!
  \*********************************************************************/
      /*! exports provided: ResizeObserver */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ResizeObserver", function () {
          return ResizeObserver;
        });
        /* harmony import */ var _ResizeObserverController__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ResizeObserverController */ "../node_modules/@juggle/resize-observer/lib/ResizeObserverController.js");
        /* harmony import */ var _utils_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/element */ "../node_modules/@juggle/resize-observer/lib/utils/element.js");

        var ResizeObserver = (function () {
          function ResizeObserver(callback) {
            if (arguments.length === 0) {
              throw new TypeError("Failed to construct 'ResizeObserver': 1 argument required, but only 0 present.");
            }
            if (typeof callback !== "function") {
              throw new TypeError("Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function.");
            }
            _ResizeObserverController__WEBPACK_IMPORTED_MODULE_0__["ResizeObserverController"].connect(this, callback);
          }
          ResizeObserver.prototype.observe = function (target, options) {
            if (arguments.length === 0) {
              throw new TypeError("Failed to execute 'observe' on 'ResizeObserver': 1 argument required, but only 0 present.");
            }
            if (!Object(_utils_element__WEBPACK_IMPORTED_MODULE_1__["isElement"])(target)) {
              throw new TypeError("Failed to execute 'observe' on 'ResizeObserver': parameter 1 is not of type 'Element");
            }
            _ResizeObserverController__WEBPACK_IMPORTED_MODULE_0__["ResizeObserverController"].observe(this, target, options);
          };
          ResizeObserver.prototype.unobserve = function (target) {
            if (arguments.length === 0) {
              throw new TypeError("Failed to execute 'unobserve' on 'ResizeObserver': 1 argument required, but only 0 present.");
            }
            if (!Object(_utils_element__WEBPACK_IMPORTED_MODULE_1__["isElement"])(target)) {
              throw new TypeError("Failed to execute 'unobserve' on 'ResizeObserver': parameter 1 is not of type 'Element");
            }
            _ResizeObserverController__WEBPACK_IMPORTED_MODULE_0__["ResizeObserverController"].unobserve(this, target);
          };
          ResizeObserver.prototype.disconnect = function () {
            _ResizeObserverController__WEBPACK_IMPORTED_MODULE_0__["ResizeObserverController"].disconnect(this);
          };
          ResizeObserver.toString = function () {
            return "function ResizeObserver () { [polyfill code] }";
          };
          return ResizeObserver;
        })();

        /***/
      },

    /***/ "../node_modules/@juggle/resize-observer/lib/ResizeObserverBoxOptions.js":
      /*!*******************************************************************************!*\
  !*** ../node_modules/@juggle/resize-observer/lib/ResizeObserverBoxOptions.js ***!
  \*******************************************************************************/
      /*! exports provided: ResizeObserverBoxOptions */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ResizeObserverBoxOptions", function () {
          return ResizeObserverBoxOptions;
        });
        var ResizeObserverBoxOptions;
        (function (ResizeObserverBoxOptions) {
          ResizeObserverBoxOptions["BORDER_BOX"] = "border-box";
          ResizeObserverBoxOptions["CONTENT_BOX"] = "content-box";
          ResizeObserverBoxOptions["DEVICE_PIXEL_CONTENT_BOX"] = "device-pixel-content-box";
        })(ResizeObserverBoxOptions || (ResizeObserverBoxOptions = {}));

        /***/
      },

    /***/ "../node_modules/@juggle/resize-observer/lib/ResizeObserverController.js":
      /*!*******************************************************************************!*\
  !*** ../node_modules/@juggle/resize-observer/lib/ResizeObserverController.js ***!
  \*******************************************************************************/
      /*! exports provided: ResizeObserverController */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ResizeObserverController", function () {
          return ResizeObserverController;
        });
        /* harmony import */ var _utils_scheduler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/scheduler */ "../node_modules/@juggle/resize-observer/lib/utils/scheduler.js");
        /* harmony import */ var _ResizeObservation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ResizeObservation */ "../node_modules/@juggle/resize-observer/lib/ResizeObservation.js");
        /* harmony import */ var _ResizeObserverDetail__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ResizeObserverDetail */ "../node_modules/@juggle/resize-observer/lib/ResizeObserverDetail.js");
        /* harmony import */ var _utils_resizeObservers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/resizeObservers */ "../node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js");

        var observerMap = new WeakMap();
        var getObservationIndex = function (observationTargets, target) {
          for (var i = 0; i < observationTargets.length; i += 1) {
            if (observationTargets[i].target === target) {
              return i;
            }
          }
          return -1;
        };
        var ResizeObserverController = (function () {
          function ResizeObserverController() {}
          ResizeObserverController.connect = function (resizeObserver, callback) {
            var detail = new _ResizeObserverDetail__WEBPACK_IMPORTED_MODULE_2__["ResizeObserverDetail"](resizeObserver, callback);
            observerMap.set(resizeObserver, detail);
          };
          ResizeObserverController.observe = function (resizeObserver, target, options) {
            var detail = observerMap.get(resizeObserver);
            var firstObservation = detail.observationTargets.length === 0;
            if (getObservationIndex(detail.observationTargets, target) < 0) {
              firstObservation && _utils_resizeObservers__WEBPACK_IMPORTED_MODULE_3__["resizeObservers"].push(detail);
              detail.observationTargets.push(new _ResizeObservation__WEBPACK_IMPORTED_MODULE_1__["ResizeObservation"](target, options && options.box));
              Object(_utils_scheduler__WEBPACK_IMPORTED_MODULE_0__["updateCount"])(1);
              _utils_scheduler__WEBPACK_IMPORTED_MODULE_0__["scheduler"].schedule();
            }
          };
          ResizeObserverController.unobserve = function (resizeObserver, target) {
            var detail = observerMap.get(resizeObserver);
            var index = getObservationIndex(detail.observationTargets, target);
            var lastObservation = detail.observationTargets.length === 1;
            if (index >= 0) {
              lastObservation && _utils_resizeObservers__WEBPACK_IMPORTED_MODULE_3__["resizeObservers"].splice(_utils_resizeObservers__WEBPACK_IMPORTED_MODULE_3__["resizeObservers"].indexOf(detail), 1);
              detail.observationTargets.splice(index, 1);
              Object(_utils_scheduler__WEBPACK_IMPORTED_MODULE_0__["updateCount"])(-1);
            }
          };
          ResizeObserverController.disconnect = function (resizeObserver) {
            var _this = this;
            var detail = observerMap.get(resizeObserver);
            detail.observationTargets.slice().forEach(function (ot) {
              return _this.unobserve(resizeObserver, ot.target);
            });
            detail.activeTargets.splice(0, detail.activeTargets.length);
          };
          return ResizeObserverController;
        })();

        /***/
      },

    /***/ "../node_modules/@juggle/resize-observer/lib/ResizeObserverDetail.js":
      /*!***************************************************************************!*\
  !*** ../node_modules/@juggle/resize-observer/lib/ResizeObserverDetail.js ***!
  \***************************************************************************/
      /*! exports provided: ResizeObserverDetail */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ResizeObserverDetail", function () {
          return ResizeObserverDetail;
        });
        var ResizeObserverDetail = (function () {
          function ResizeObserverDetail(resizeObserver, callback) {
            this.activeTargets = [];
            this.skippedTargets = [];
            this.observationTargets = [];
            this.observer = resizeObserver;
            this.callback = callback;
          }
          return ResizeObserverDetail;
        })();

        /***/
      },

    /***/ "../node_modules/@juggle/resize-observer/lib/ResizeObserverEntry.js":
      /*!**************************************************************************!*\
  !*** ../node_modules/@juggle/resize-observer/lib/ResizeObserverEntry.js ***!
  \**************************************************************************/
      /*! exports provided: ResizeObserverEntry */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ResizeObserverEntry", function () {
          return ResizeObserverEntry;
        });
        /* harmony import */ var _algorithms_calculateBoxSize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./algorithms/calculateBoxSize */ "../node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js");

        var ResizeObserverEntry = (function () {
          function ResizeObserverEntry(target) {
            var boxes = Object(_algorithms_calculateBoxSize__WEBPACK_IMPORTED_MODULE_0__["calculateBoxSizes"])(target);
            this.target = target;
            this.contentRect = boxes.contentRect;
            this.borderBoxSize = [boxes.borderBoxSize];
            this.contentBoxSize = [boxes.contentBoxSize];
            this.devicePixelContentBoxSize = [boxes.devicePixelContentBoxSize];
          }
          return ResizeObserverEntry;
        })();

        /***/
      },

    /***/ "../node_modules/@juggle/resize-observer/lib/algorithms/broadcastActiveObservations.js":
      /*!*********************************************************************************************!*\
  !*** ../node_modules/@juggle/resize-observer/lib/algorithms/broadcastActiveObservations.js ***!
  \*********************************************************************************************/
      /*! exports provided: broadcastActiveObservations */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "broadcastActiveObservations", function () {
          return broadcastActiveObservations;
        });
        /* harmony import */ var _utils_resizeObservers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/resizeObservers */ "../node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js");
        /* harmony import */ var _ResizeObserverEntry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ResizeObserverEntry */ "../node_modules/@juggle/resize-observer/lib/ResizeObserverEntry.js");
        /* harmony import */ var _calculateDepthForNode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./calculateDepthForNode */ "../node_modules/@juggle/resize-observer/lib/algorithms/calculateDepthForNode.js");
        /* harmony import */ var _calculateBoxSize__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./calculateBoxSize */ "../node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js");

        var broadcastActiveObservations = function () {
          var shallowestDepth = Infinity;
          var callbacks = [];
          _utils_resizeObservers__WEBPACK_IMPORTED_MODULE_0__["resizeObservers"].forEach(function processObserver(ro) {
            if (ro.activeTargets.length === 0) {
              return;
            }
            var entries = [];
            ro.activeTargets.forEach(function processTarget(ot) {
              var entry = new _ResizeObserverEntry__WEBPACK_IMPORTED_MODULE_1__["ResizeObserverEntry"](ot.target);
              var targetDepth = Object(_calculateDepthForNode__WEBPACK_IMPORTED_MODULE_2__["calculateDepthForNode"])(ot.target);
              entries.push(entry);
              ot.lastReportedSize = Object(_calculateBoxSize__WEBPACK_IMPORTED_MODULE_3__["calculateBoxSize"])(ot.target, ot.observedBox);
              if (targetDepth < shallowestDepth) {
                shallowestDepth = targetDepth;
              }
            });
            callbacks.push(function resizeObserverCallback() {
              ro.callback.call(ro.observer, entries, ro.observer);
            });
            ro.activeTargets.splice(0, ro.activeTargets.length);
          });
          for (var _i = 0, callbacks_1 = callbacks; _i < callbacks_1.length; _i++) {
            var callback = callbacks_1[_i];
            callback();
          }
          return shallowestDepth;
        };

        /***/
      },

    /***/ "../node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js":
      /*!**********************************************************************************!*\
  !*** ../node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js ***!
  \**********************************************************************************/
      /*! exports provided: calculateBoxSize, calculateBoxSizes */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "calculateBoxSize", function () {
          return calculateBoxSize;
        });
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "calculateBoxSizes", function () {
          return calculateBoxSizes;
        });
        /* harmony import */ var _ResizeObserverBoxOptions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ResizeObserverBoxOptions */ "../node_modules/@juggle/resize-observer/lib/ResizeObserverBoxOptions.js");
        /* harmony import */ var _DOMRectReadOnly__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../DOMRectReadOnly */ "../node_modules/@juggle/resize-observer/lib/DOMRectReadOnly.js");
        /* harmony import */ var _utils_element__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/element */ "../node_modules/@juggle/resize-observer/lib/utils/element.js");
        /* harmony import */ var _utils_global__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/global */ "../node_modules/@juggle/resize-observer/lib/utils/global.js");

        var cache = new WeakMap();
        var scrollRegexp = /auto|scroll/;
        var verticalRegexp = /^tb|vertical/;
        var IE = /msie|trident/i.test(_utils_global__WEBPACK_IMPORTED_MODULE_3__["global"].navigator && _utils_global__WEBPACK_IMPORTED_MODULE_3__["global"].navigator.userAgent);
        var parseDimension = function (pixel) {
          return parseFloat(pixel || "0");
        };
        var size = function (inlineSize, blockSize, switchSizes) {
          if (inlineSize === void 0) {
            inlineSize = 0;
          }
          if (blockSize === void 0) {
            blockSize = 0;
          }
          if (switchSizes === void 0) {
            switchSizes = false;
          }
          return Object.freeze({
            inlineSize: (switchSizes ? blockSize : inlineSize) || 0,
            blockSize: (switchSizes ? inlineSize : blockSize) || 0,
          });
        };
        var zeroBoxes = Object.freeze({
          devicePixelContentBoxSize: size(),
          borderBoxSize: size(),
          contentBoxSize: size(),
          contentRect: new _DOMRectReadOnly__WEBPACK_IMPORTED_MODULE_1__["DOMRectReadOnly"](0, 0, 0, 0),
        });
        var calculateBoxSizes = function (target, forceRecalculation) {
          if (forceRecalculation === void 0) {
            forceRecalculation = false;
          }
          if (cache.has(target) && !forceRecalculation) {
            return cache.get(target);
          }
          if (Object(_utils_element__WEBPACK_IMPORTED_MODULE_2__["isHidden"])(target)) {
            cache.set(target, zeroBoxes);
            return zeroBoxes;
          }
          var cs = getComputedStyle(target);
          var svg = Object(_utils_element__WEBPACK_IMPORTED_MODULE_2__["isSVG"])(target) && target.ownerSVGElement && target.getBBox();
          var removePadding = !IE && cs.boxSizing === "border-box";
          var switchSizes = verticalRegexp.test(cs.writingMode || "");
          var canScrollVertically = !svg && scrollRegexp.test(cs.overflowY || "");
          var canScrollHorizontally = !svg && scrollRegexp.test(cs.overflowX || "");
          var paddingTop = svg ? 0 : parseDimension(cs.paddingTop);
          var paddingRight = svg ? 0 : parseDimension(cs.paddingRight);
          var paddingBottom = svg ? 0 : parseDimension(cs.paddingBottom);
          var paddingLeft = svg ? 0 : parseDimension(cs.paddingLeft);
          var borderTop = svg ? 0 : parseDimension(cs.borderTopWidth);
          var borderRight = svg ? 0 : parseDimension(cs.borderRightWidth);
          var borderBottom = svg ? 0 : parseDimension(cs.borderBottomWidth);
          var borderLeft = svg ? 0 : parseDimension(cs.borderLeftWidth);
          var horizontalPadding = paddingLeft + paddingRight;
          var verticalPadding = paddingTop + paddingBottom;
          var horizontalBorderArea = borderLeft + borderRight;
          var verticalBorderArea = borderTop + borderBottom;
          var horizontalScrollbarThickness = !canScrollHorizontally ? 0 : target.offsetHeight - verticalBorderArea - target.clientHeight;
          var verticalScrollbarThickness = !canScrollVertically ? 0 : target.offsetWidth - horizontalBorderArea - target.clientWidth;
          var widthReduction = removePadding ? horizontalPadding + horizontalBorderArea : 0;
          var heightReduction = removePadding ? verticalPadding + verticalBorderArea : 0;
          var contentWidth = svg ? svg.width : parseDimension(cs.width) - widthReduction - verticalScrollbarThickness;
          var contentHeight = svg ? svg.height : parseDimension(cs.height) - heightReduction - horizontalScrollbarThickness;
          var borderBoxWidth = contentWidth + horizontalPadding + verticalScrollbarThickness + horizontalBorderArea;
          var borderBoxHeight = contentHeight + verticalPadding + horizontalScrollbarThickness + verticalBorderArea;
          var boxes = Object.freeze({
            devicePixelContentBoxSize: size(Math.round(contentWidth * devicePixelRatio), Math.round(contentHeight * devicePixelRatio), switchSizes),
            borderBoxSize: size(borderBoxWidth, borderBoxHeight, switchSizes),
            contentBoxSize: size(contentWidth, contentHeight, switchSizes),
            contentRect: new _DOMRectReadOnly__WEBPACK_IMPORTED_MODULE_1__["DOMRectReadOnly"](paddingLeft, paddingTop, contentWidth, contentHeight),
          });
          cache.set(target, boxes);
          return boxes;
        };
        var calculateBoxSize = function (target, observedBox, forceRecalculation) {
          var _a = calculateBoxSizes(target, forceRecalculation),
            borderBoxSize = _a.borderBoxSize,
            contentBoxSize = _a.contentBoxSize,
            devicePixelContentBoxSize = _a.devicePixelContentBoxSize;
          switch (observedBox) {
            case _ResizeObserverBoxOptions__WEBPACK_IMPORTED_MODULE_0__["ResizeObserverBoxOptions"].DEVICE_PIXEL_CONTENT_BOX:
              return devicePixelContentBoxSize;
            case _ResizeObserverBoxOptions__WEBPACK_IMPORTED_MODULE_0__["ResizeObserverBoxOptions"].BORDER_BOX:
              return borderBoxSize;
            default:
              return contentBoxSize;
          }
        };

        /***/
      },

    /***/ "../node_modules/@juggle/resize-observer/lib/algorithms/calculateDepthForNode.js":
      /*!***************************************************************************************!*\
  !*** ../node_modules/@juggle/resize-observer/lib/algorithms/calculateDepthForNode.js ***!
  \***************************************************************************************/
      /*! exports provided: calculateDepthForNode */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "calculateDepthForNode", function () {
          return calculateDepthForNode;
        });
        /* harmony import */ var _utils_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/element */ "../node_modules/@juggle/resize-observer/lib/utils/element.js");

        var calculateDepthForNode = function (node) {
          if (Object(_utils_element__WEBPACK_IMPORTED_MODULE_0__["isHidden"])(node)) {
            return Infinity;
          }
          var depth = 0;
          var parent = node.parentNode;
          while (parent) {
            depth += 1;
            parent = parent.parentNode;
          }
          return depth;
        };

        /***/
      },

    /***/ "../node_modules/@juggle/resize-observer/lib/algorithms/deliverResizeLoopError.js":
      /*!****************************************************************************************!*\
  !*** ../node_modules/@juggle/resize-observer/lib/algorithms/deliverResizeLoopError.js ***!
  \****************************************************************************************/
      /*! exports provided: deliverResizeLoopError */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deliverResizeLoopError", function () {
          return deliverResizeLoopError;
        });
        var msg = "ResizeObserver loop completed with undelivered notifications.";
        var deliverResizeLoopError = function () {
          var event;
          if (typeof ErrorEvent === "function") {
            event = new ErrorEvent("error", {
              message: msg,
            });
          } else {
            event = document.createEvent("Event");
            event.initEvent("error", false, false);
            event.message = msg;
          }
          window.dispatchEvent(event);
        };

        /***/
      },

    /***/ "../node_modules/@juggle/resize-observer/lib/algorithms/gatherActiveObservationsAtDepth.js":
      /*!*************************************************************************************************!*\
  !*** ../node_modules/@juggle/resize-observer/lib/algorithms/gatherActiveObservationsAtDepth.js ***!
  \*************************************************************************************************/
      /*! exports provided: gatherActiveObservationsAtDepth */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gatherActiveObservationsAtDepth", function () {
          return gatherActiveObservationsAtDepth;
        });
        /* harmony import */ var _utils_resizeObservers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/resizeObservers */ "../node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js");
        /* harmony import */ var _calculateDepthForNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./calculateDepthForNode */ "../node_modules/@juggle/resize-observer/lib/algorithms/calculateDepthForNode.js");

        var gatherActiveObservationsAtDepth = function (depth) {
          _utils_resizeObservers__WEBPACK_IMPORTED_MODULE_0__["resizeObservers"].forEach(function processObserver(ro) {
            ro.activeTargets.splice(0, ro.activeTargets.length);
            ro.skippedTargets.splice(0, ro.skippedTargets.length);
            ro.observationTargets.forEach(function processTarget(ot) {
              if (ot.isActive()) {
                if (Object(_calculateDepthForNode__WEBPACK_IMPORTED_MODULE_1__["calculateDepthForNode"])(ot.target) > depth) {
                  ro.activeTargets.push(ot);
                } else {
                  ro.skippedTargets.push(ot);
                }
              }
            });
          });
        };

        /***/
      },

    /***/ "../node_modules/@juggle/resize-observer/lib/algorithms/hasActiveObservations.js":
      /*!***************************************************************************************!*\
  !*** ../node_modules/@juggle/resize-observer/lib/algorithms/hasActiveObservations.js ***!
  \***************************************************************************************/
      /*! exports provided: hasActiveObservations */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hasActiveObservations", function () {
          return hasActiveObservations;
        });
        /* harmony import */ var _utils_resizeObservers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/resizeObservers */ "../node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js");

        var hasActiveObservations = function () {
          return _utils_resizeObservers__WEBPACK_IMPORTED_MODULE_0__["resizeObservers"].some(function (ro) {
            return ro.activeTargets.length > 0;
          });
        };

        /***/
      },

    /***/ "../node_modules/@juggle/resize-observer/lib/algorithms/hasSkippedObservations.js":
      /*!****************************************************************************************!*\
  !*** ../node_modules/@juggle/resize-observer/lib/algorithms/hasSkippedObservations.js ***!
  \****************************************************************************************/
      /*! exports provided: hasSkippedObservations */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hasSkippedObservations", function () {
          return hasSkippedObservations;
        });
        /* harmony import */ var _utils_resizeObservers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/resizeObservers */ "../node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js");

        var hasSkippedObservations = function () {
          return _utils_resizeObservers__WEBPACK_IMPORTED_MODULE_0__["resizeObservers"].some(function (ro) {
            return ro.skippedTargets.length > 0;
          });
        };

        /***/
      },

    /***/ "../node_modules/@juggle/resize-observer/lib/exports/resize-observer.js":
      /*!******************************************************************************!*\
  !*** ../node_modules/@juggle/resize-observer/lib/exports/resize-observer.js ***!
  \******************************************************************************/
      /*! exports provided: ResizeObserver, ResizeObserverEntry */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony import */ var _ResizeObserver__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ResizeObserver */ "../node_modules/@juggle/resize-observer/lib/ResizeObserver.js");
        /* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ResizeObserver", function () {
          return _ResizeObserver__WEBPACK_IMPORTED_MODULE_0__["ResizeObserver"];
        });

        /* harmony import */ var _ResizeObserverEntry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ResizeObserverEntry */ "../node_modules/@juggle/resize-observer/lib/ResizeObserverEntry.js");
        /* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ResizeObserverEntry", function () {
          return _ResizeObserverEntry__WEBPACK_IMPORTED_MODULE_1__["ResizeObserverEntry"];
        });

        /***/
      },

    /***/ "../node_modules/@juggle/resize-observer/lib/utils/element.js":
      /*!********************************************************************!*\
  !*** ../node_modules/@juggle/resize-observer/lib/utils/element.js ***!
  \********************************************************************/
      /*! exports provided: isSVG, isHidden, isElement, isReplacedElement */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isSVG", function () {
          return isSVG;
        });
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isHidden", function () {
          return isHidden;
        });
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isElement", function () {
          return isElement;
        });
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isReplacedElement", function () {
          return isReplacedElement;
        });
        var isSVG = function (target) {
          return target instanceof SVGElement && "getBBox" in target;
        };
        var isHidden = function (target) {
          if (isSVG(target)) {
            var _a = target.getBBox(),
              width = _a.width,
              height = _a.height;
            return !width && !height;
          }
          var _b = target,
            offsetWidth = _b.offsetWidth,
            offsetHeight = _b.offsetHeight;
          return !(offsetWidth || offsetHeight || target.getClientRects().length);
        };
        var isElement = function (obj) {
          var _a, _b;
          var scope = (_b = (_a = obj) === null || _a === void 0 ? void 0 : _a.ownerDocument) === null || _b === void 0 ? void 0 : _b.defaultView;
          return !!(scope && obj instanceof scope.Element);
        };
        var isReplacedElement = function (target) {
          switch (target.tagName) {
            case "INPUT":
              if (target.type !== "image") {
                break;
              }
            case "VIDEO":
            case "AUDIO":
            case "EMBED":
            case "OBJECT":
            case "CANVAS":
            case "IFRAME":
            case "IMG":
              return true;
          }
          return false;
        };

        /***/
      },

    /***/ "../node_modules/@juggle/resize-observer/lib/utils/global.js":
      /*!*******************************************************************!*\
  !*** ../node_modules/@juggle/resize-observer/lib/utils/global.js ***!
  \*******************************************************************/
      /*! exports provided: global */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "global", function () {
          return global;
        });
        var global = typeof window !== "undefined" ? window : {};

        /***/
      },

    /***/ "../node_modules/@juggle/resize-observer/lib/utils/process.js":
      /*!********************************************************************!*\
  !*** ../node_modules/@juggle/resize-observer/lib/utils/process.js ***!
  \********************************************************************/
      /*! exports provided: process */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "process", function () {
          return process;
        });
        /* harmony import */ var _algorithms_hasActiveObservations__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../algorithms/hasActiveObservations */ "../node_modules/@juggle/resize-observer/lib/algorithms/hasActiveObservations.js");
        /* harmony import */ var _algorithms_hasSkippedObservations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../algorithms/hasSkippedObservations */ "../node_modules/@juggle/resize-observer/lib/algorithms/hasSkippedObservations.js");
        /* harmony import */ var _algorithms_deliverResizeLoopError__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../algorithms/deliverResizeLoopError */ "../node_modules/@juggle/resize-observer/lib/algorithms/deliverResizeLoopError.js");
        /* harmony import */ var _algorithms_broadcastActiveObservations__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../algorithms/broadcastActiveObservations */ "../node_modules/@juggle/resize-observer/lib/algorithms/broadcastActiveObservations.js");
        /* harmony import */ var _algorithms_gatherActiveObservationsAtDepth__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../algorithms/gatherActiveObservationsAtDepth */ "../node_modules/@juggle/resize-observer/lib/algorithms/gatherActiveObservationsAtDepth.js");

        var process = function () {
          var depth = 0;
          Object(_algorithms_gatherActiveObservationsAtDepth__WEBPACK_IMPORTED_MODULE_4__["gatherActiveObservationsAtDepth"])(depth);
          while (Object(_algorithms_hasActiveObservations__WEBPACK_IMPORTED_MODULE_0__["hasActiveObservations"])()) {
            depth = Object(_algorithms_broadcastActiveObservations__WEBPACK_IMPORTED_MODULE_3__["broadcastActiveObservations"])();
            Object(_algorithms_gatherActiveObservationsAtDepth__WEBPACK_IMPORTED_MODULE_4__["gatherActiveObservationsAtDepth"])(depth);
          }
          if (Object(_algorithms_hasSkippedObservations__WEBPACK_IMPORTED_MODULE_1__["hasSkippedObservations"])()) {
            Object(_algorithms_deliverResizeLoopError__WEBPACK_IMPORTED_MODULE_2__["deliverResizeLoopError"])();
          }
          return depth > 0;
        };

        /***/
      },

    /***/ "../node_modules/@juggle/resize-observer/lib/utils/queueMicroTask.js":
      /*!***************************************************************************!*\
  !*** ../node_modules/@juggle/resize-observer/lib/utils/queueMicroTask.js ***!
  \***************************************************************************/
      /*! exports provided: queueMicroTask */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queueMicroTask", function () {
          return queueMicroTask;
        });
        var trigger;
        var callbacks = [];
        var notify = function () {
          return callbacks.splice(0).forEach(function (cb) {
            return cb();
          });
        };
        var queueMicroTask = function (callback) {
          if (!trigger) {
            var toggle_1 = 0;
            var el_1 = document.createTextNode("");
            var config = { characterData: true };
            new MutationObserver(function () {
              return notify();
            }).observe(el_1, config);
            trigger = function () {
              el_1.textContent = "" + (toggle_1 ? toggle_1-- : toggle_1++);
            };
          }
          callbacks.push(callback);
          trigger();
        };

        /***/
      },

    /***/ "../node_modules/@juggle/resize-observer/lib/utils/queueResizeObserver.js":
      /*!********************************************************************************!*\
  !*** ../node_modules/@juggle/resize-observer/lib/utils/queueResizeObserver.js ***!
  \********************************************************************************/
      /*! exports provided: queueResizeObserver */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queueResizeObserver", function () {
          return queueResizeObserver;
        });
        /* harmony import */ var _queueMicroTask__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./queueMicroTask */ "../node_modules/@juggle/resize-observer/lib/utils/queueMicroTask.js");

        var queueResizeObserver = function (cb) {
          Object(_queueMicroTask__WEBPACK_IMPORTED_MODULE_0__["queueMicroTask"])(function ResizeObserver() {
            requestAnimationFrame(cb);
          });
        };

        /***/
      },

    /***/ "../node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js":
      /*!****************************************************************************!*\
  !*** ../node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js ***!
  \****************************************************************************/
      /*! exports provided: resizeObservers */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "resizeObservers", function () {
          return resizeObservers;
        });
        var resizeObservers = [];

        /***/
      },

    /***/ "../node_modules/@juggle/resize-observer/lib/utils/scheduler.js":
      /*!**********************************************************************!*\
  !*** ../node_modules/@juggle/resize-observer/lib/utils/scheduler.js ***!
  \**********************************************************************/
      /*! exports provided: scheduler, updateCount */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheduler", function () {
          return scheduler;
        });
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateCount", function () {
          return updateCount;
        });
        /* harmony import */ var _process__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./process */ "../node_modules/@juggle/resize-observer/lib/utils/process.js");
        /* harmony import */ var _global__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./global */ "../node_modules/@juggle/resize-observer/lib/utils/global.js");
        /* harmony import */ var _queueResizeObserver__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./queueResizeObserver */ "../node_modules/@juggle/resize-observer/lib/utils/queueResizeObserver.js");

        var watching = 0;
        var isWatching = function () {
          return !!watching;
        };
        var CATCH_PERIOD = 250;
        var observerConfig = {
          attributes: true,
          characterData: true,
          childList: true,
          subtree: true,
        };
        var events = ["resize", "load", "transitionend", "animationend", "animationstart", "animationiteration", "keyup", "keydown", "mouseup", "mousedown", "mouseover", "mouseout", "blur", "focus"];
        var time = function (timeout) {
          if (timeout === void 0) {
            timeout = 0;
          }
          return Date.now() + timeout;
        };
        var scheduled = false;
        var Scheduler = (function () {
          function Scheduler() {
            var _this = this;
            this.stopped = true;
            this.listener = function () {
              return _this.schedule();
            };
          }
          Scheduler.prototype.run = function (timeout) {
            var _this = this;
            if (timeout === void 0) {
              timeout = CATCH_PERIOD;
            }
            if (scheduled) {
              return;
            }
            scheduled = true;
            var until = time(timeout);
            Object(_queueResizeObserver__WEBPACK_IMPORTED_MODULE_2__["queueResizeObserver"])(function () {
              var elementsHaveResized = false;
              try {
                elementsHaveResized = Object(_process__WEBPACK_IMPORTED_MODULE_0__["process"])();
              } finally {
                scheduled = false;
                timeout = until - time();
                if (!isWatching()) {
                  return;
                }
                if (elementsHaveResized) {
                  _this.run(1000);
                } else if (timeout > 0) {
                  _this.run(timeout);
                } else {
                  _this.start();
                }
              }
            });
          };
          Scheduler.prototype.schedule = function () {
            this.stop();
            this.run();
          };
          Scheduler.prototype.observe = function () {
            var _this = this;
            var cb = function () {
              return _this.observer && _this.observer.observe(document.body, observerConfig);
            };
            document.body ? cb() : _global__WEBPACK_IMPORTED_MODULE_1__["global"].addEventListener("DOMContentLoaded", cb);
          };
          Scheduler.prototype.start = function () {
            var _this = this;
            if (this.stopped) {
              this.stopped = false;
              this.observer = new MutationObserver(this.listener);
              this.observe();
              events.forEach(function (name) {
                return _global__WEBPACK_IMPORTED_MODULE_1__["global"].addEventListener(name, _this.listener, true);
              });
            }
          };
          Scheduler.prototype.stop = function () {
            var _this = this;
            if (!this.stopped) {
              this.observer && this.observer.disconnect();
              events.forEach(function (name) {
                return _global__WEBPACK_IMPORTED_MODULE_1__["global"].removeEventListener(name, _this.listener, true);
              });
              this.stopped = true;
            }
          };
          return Scheduler;
        })();
        var scheduler = new Scheduler();
        var updateCount = function (n) {
          !watching && n > 0 && scheduler.start();
          watching += n;
          !watching && scheduler.stop();
        };

        /***/
      },

    /***/ "./js/main.js":
      /*!********************!*\
  !*** ./js/main.js ***!
  \********************/
      /*! no exports provided */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony import */ var _utils_ie_fix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/ie-fix */ "./js/utils/ie-fix.js");
        /* harmony import */ var _utils_ios_vh_fix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/ios-vh-fix */ "./js/utils/ios-vh-fix.js");
        /* harmony import */ var _modules_init_modals__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/init-modals */ "./js/modules/init-modals.js");
        /* harmony import */ var _modules_color_theme_change_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/color-theme-change.js */ "./js/modules/color-theme-change.js");
        /* harmony import */ var _modules_configurator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/configurator */ "./js/modules/configurator.js");
        /* harmony import */ var _modules_slider__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modules/slider */ "./js/modules/slider.js");
        /* harmony import */ var _modules_accordion__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./modules/accordion */ "./js/modules/accordion.js");
        /* harmony import */ var _modules_join_mail__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./modules/join-mail */ "./js/modules/join-mail.js");
        /* harmony import */ var _modules_header__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./modules/header */ "./js/modules/header.js");
        /* harmony import */ var _modules_init_table_scroll__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./modules/init-table-scroll */ "./js/modules/init-table-scroll.js");
        /* harmony import */ var _modules_init_input_wrapper__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./modules/init-input-wrapper */ "./js/modules/init-input-wrapper.js");
        /* harmony import */ var _modules_autoresize_textarea__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./modules/autoresize-textarea */ "./js/modules/autoresize-textarea.js");
        /* harmony import */ var _modules_init_phone_mask__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./modules/init-phone-mask */ "./js/modules/init-phone-mask.js");
        /* harmony import */ var _modules_form__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./modules/form */ "./js/modules/form.js");
        /* harmony import */ var _modules_init_expertise_counter__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./modules/init-expertise-counter */ "./js/modules/init-expertise-counter.js");
        /* harmony import */ var _modules_init_scroll_to__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./modules/init-scroll-to */ "./js/modules/init-scroll-to.js");
        /* harmony import */ var _modules_wwdid_slider__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./modules/wwdid-slider */ "./js/modules/wwdid-slider.js");
        /* harmony import */ var _modules_companies_slider__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./modules/companies-slider */ "./js/modules/companies-slider.js");
        /* harmony import */ var _modules_init_activity_video__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./modules/init-activity-video */ "./js/modules/init-activity-video.js");
        /* harmony import */ var _modules_init_animation__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./modules/init-animation */ "./js/modules/init-animation.js");
        /* harmony import */ var _modules_aside__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./modules/aside */ "./js/modules/aside.js");
        /* harmony import */ var _modules_init_footer_fix__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./modules/init-footer-fix */ "./js/modules/init-footer-fix.js");

        Object(_modules_color_theme_change_js__WEBPACK_IMPORTED_MODULE_3__["colorThemeChange"])();
        Object(_modules_init_modals__WEBPACK_IMPORTED_MODULE_2__["initModals"])();
        window.addEventListener("load", function () {
          Object(_utils_ie_fix__WEBPACK_IMPORTED_MODULE_0__["ieFix"])();
          Object(_utils_ios_vh_fix__WEBPACK_IMPORTED_MODULE_1__["iosVhFix"])();
          Object(_modules_header__WEBPACK_IMPORTED_MODULE_8__["headerScroll"])();
          Object(_modules_wwdid_slider__WEBPACK_IMPORTED_MODULE_16__["initWwdidSlider"])();
          Object(_modules_accordion__WEBPACK_IMPORTED_MODULE_6__["accordion"])();
          Object(_modules_init_animation__WEBPACK_IMPORTED_MODULE_19__["initAnimation"])();
          Object(_modules_aside__WEBPACK_IMPORTED_MODULE_20__["initAside"])();
          Object(_modules_init_footer_fix__WEBPACK_IMPORTED_MODULE_21__["initFooterFix"])();
          Object(_modules_configurator__WEBPACK_IMPORTED_MODULE_4__["initConfigurator"])();
          Object(_modules_header__WEBPACK_IMPORTED_MODULE_8__["menuToggleFunc"])();
          Object(_modules_slider__WEBPACK_IMPORTED_MODULE_5__["initSliders"])();
          Object(_modules_join_mail__WEBPACK_IMPORTED_MODULE_7__["initJoinMail"])();
          Object(_modules_init_table_scroll__WEBPACK_IMPORTED_MODULE_9__["initTableScroll"])();
          Object(_modules_init_input_wrapper__WEBPACK_IMPORTED_MODULE_10__["initInputWrappers"])();
          Object(_modules_autoresize_textarea__WEBPACK_IMPORTED_MODULE_11__["initAutoresizeTextarea"])();
          Object(_modules_init_phone_mask__WEBPACK_IMPORTED_MODULE_12__["initPhoneMask"])();
          Object(_modules_form__WEBPACK_IMPORTED_MODULE_13__["initForm"])();
          Object(_modules_init_expertise_counter__WEBPACK_IMPORTED_MODULE_14__["initExpertiseCounter"])();
          Object(_modules_init_scroll_to__WEBPACK_IMPORTED_MODULE_15__["initScrollTo"])();
          Object(_modules_companies_slider__WEBPACK_IMPORTED_MODULE_17__["initCompaniesSliders"])();
          Object(_modules_init_activity_video__WEBPACK_IMPORTED_MODULE_18__["initActivityVideo"])();
          Object(_modules_init_footer_fix__WEBPACK_IMPORTED_MODULE_21__["initFooterFix"])();
        });

        /***/
      },

    /***/ "./js/modules/accordion.js":
      /*!*********************************!*\
  !*** ./js/modules/accordion.js ***!
  \*********************************/
      /*! exports provided: accordion */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "accordion", function () {
          return accordion;
        });
        /* harmony import */ var _aside__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./aside */ "./js/modules/aside.js");
        /* harmony import */ var _init_footer_fix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./init-footer-fix */ "./js/modules/init-footer-fix.js");

        var accordionTabs = document.querySelectorAll(".js-accordion-link");
        var breakpointMd = window.matchMedia("(min-width:768px)");
        var breakpointLg = window.matchMedia("(min-width:1024px)");

        var clearHeight = function clearHeight() {
          accordionTabs.forEach(function (el) {
            var accordionItemWrapper = el.parentNode;
            accordionItemWrapper.classList.remove("active");
            var contentWrapper = el.nextElementSibling;
            contentWrapper.style.maxHeight = 0;
          });
          Object(_aside__WEBPACK_IMPORTED_MODULE_0__["animateAside"])();
          Object(_init_footer_fix__WEBPACK_IMPORTED_MODULE_1__["coverFooter"])();
        };

        var isActive = function isActive(el) {
          return el.classList.contains("active");
        };

        var accordion = function accordion() {
          if (accordionTabs.length) {
            breakpointMd.addListener(clearHeight);
            breakpointLg.addListener(clearHeight);
            accordionTabs.forEach(function (el) {
              var contentWrapper = el.nextElementSibling;
              var accordionItemWrapper = el.parentNode;

              if (isActive(accordionItemWrapper)) {
                contentWrapper.style.maxHeight = contentWrapper.scrollHeight + "px";
              } else {
                contentWrapper.style.maxHeight = 0;
              }

              el.addEventListener("click", function (evt) {
                evt.preventDefault();
                document.activeElement.blur();

                if (isActive(accordionItemWrapper)) {
                  accordionItemWrapper.classList.remove("active");
                  contentWrapper.style.maxHeight = 0;
                  Object(_init_footer_fix__WEBPACK_IMPORTED_MODULE_1__["coverFooter"])();
                  setTimeout(function () {
                    Object(_aside__WEBPACK_IMPORTED_MODULE_0__["animateAside"])();
                  }, 600);
                } else {
                  accordionItemWrapper.classList.add("active");
                  contentWrapper.style.maxHeight = contentWrapper.scrollHeight + "px";
                  Object(_init_footer_fix__WEBPACK_IMPORTED_MODULE_1__["coverFooter"])();
                  setTimeout(function () {
                    Object(_aside__WEBPACK_IMPORTED_MODULE_0__["animateAside"])();
                  }, 600);
                }
              });
              window.addEventListener("resize", function () {
                if (isActive(accordionItemWrapper)) {
                  contentWrapper.style.maxHeight = contentWrapper.scrollHeight + "px";
                }
              });
            });
          }
        };

        /***/
      },

    /***/ "./js/modules/aside.js":
      /*!*****************************!*\
  !*** ./js/modules/aside.js ***!
  \*****************************/
      /*! exports provided: initAside, animateAside */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initAside", function () {
          return initAside;
        });
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "animateAside", function () {
          return animateAside;
        });
        /* harmony import */ var _header__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./header */ "./js/modules/header.js");
        /* harmony import */ var _init_footer_fix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./init-footer-fix */ "./js/modules/init-footer-fix.js");
        /* harmony import */ var _juggle_resize_observer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @juggle/resize-observer */ "../node_modules/@juggle/resize-observer/lib/exports/resize-observer.js");

        var breakpointLg = window.matchMedia("(min-width:1024px)");
        var padding = 40;
        var aside = document.querySelector(".aside");
        var content;

        var animateAside = function animateAside() {
          if (!aside) {
            return;
          }

          if (breakpointLg.matches) {
            var offset = window.pageYOffset + Object(_header__WEBPACK_IMPORTED_MODULE_0__["getHeaderHeight"])();
            var contentHeight = content.getBoundingClientRect().height;
            var topFix = aside.getBoundingClientRect().top + window.pageYOffset - padding;
            var heightDifference = aside.getBoundingClientRect().height - contentHeight;
            var top = aside.getBoundingClientRect().top;
            var limitPosition = heightDifference + top - Object(_header__WEBPACK_IMPORTED_MODULE_0__["getHeaderHeight"])() - padding;
            aside.style.minHeight = contentHeight + "px";

            if (offset > topFix) {
              if (limitPosition > 0) {
                content.setAttribute("style", "position: fixed; top: " + (Object(_header__WEBPACK_IMPORTED_MODULE_0__["getHeaderHeight"])() + padding) + "px; width: " + aside.clientWidth + "px");
              } else {
                content.setAttribute("style", "position: absolute; top: " + heightDifference + "px");
              }
            } else {
              content.removeAttribute("style");
            }
          } else {
            content.removeAttribute("style");
          }
        };

        var initAside = function initAside() {
          if (!aside) {
            return;
          }

          content = aside.querySelector(".aside__content");
          animateAside();
          window.addEventListener("resize", animateAside);
          window.addEventListener("scroll", animateAside);

          var callback = function callback() {
            animateAside();
            Object(_init_footer_fix__WEBPACK_IMPORTED_MODULE_1__["coverFooter"])();
          };

          var resizeObserver = new _juggle_resize_observer__WEBPACK_IMPORTED_MODULE_2__["ResizeObserver"](callback);
          resizeObserver.observe(aside);
        };

        /***/
      },

    /***/ "./js/modules/autoresize-textarea.js":
      /*!*******************************************!*\
  !*** ./js/modules/autoresize-textarea.js ***!
  \*******************************************/
      /*! exports provided: initAutoresizeTextarea, resizeHeight */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initAutoresizeTextarea", function () {
          return initAutoresizeTextarea;
        });
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "resizeHeight", function () {
          return resizeHeight;
        });
        var textarea = document.querySelectorAll(".autoresize-textarea textarea");

        var getHeightWithoutBorder = function getHeightWithoutBorder(el) {
          var realscrollHeight = el.scrollHeight;

          if (!el.value) {
            el.value = 0;
            realscrollHeight = el.scrollHeight;
            el.value = "";
          }

          return realscrollHeight + el.offsetHeight - el.clientHeight;
        };

        var resizeHeight = function resizeHeight(el) {
          el.style.height = "auto";
          el.style.height = "".concat(getHeightWithoutBorder(el), "px");
        };

        var initAutoresizeTextarea = function initAutoresizeTextarea() {
          if (!textarea.length) {
            return;
          }

          textarea.forEach(function (el) {
            el.style.overflow = "hidden";
            el.style.resize = "none";
            resizeHeight(el);
            el.addEventListener("input", function () {
              resizeHeight(el);
            });
            var form = el.closest("form");

            if (form) {
              form.addEventListener("submit", function () {
                resizeHeight(el);
              });
            }
          });
          window.addEventListener("resize", function () {
            textarea.forEach(function (el) {
              resizeHeight(el);
            });
          });
        };

        /***/
      },

    /***/ "./js/modules/color-theme-change.js":
      /*!******************************************!*\
  !*** ./js/modules/color-theme-change.js ***!
  \******************************************/
      /*! exports provided: colorThemeChange */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "colorThemeChange", function () {
          return colorThemeChange;
        });
        var colorThemeChange = function colorThemeChange() {
          var LIGHT_THEME_COLOR = "#ffffff";
          var DARK_THEME_COLOR = "#252525";
          var metaColorTheme = document.querySelector('meta[name="theme-color"]');
          var colorThemeCheckbox = document.getElementById("color-theme");
          var colorThemeSwither = document.querySelector(".theme-switcher");

          var msIEVersion = function msIEVersion() {
            var ua = window.navigator.userAgent;
            var msie = ua.indexOf("MSIE "); // If Internet Explorer, return version number

            if (msie > 0 || !!navigator.userAgent.match(/Trident.*rv\:11\./)) {
              colorThemeSwither.style.display = "none";
            } else {
              colorThemeSwither.classList.add("document-loaded");
            }
          };

          if (colorThemeSwither) {
            window.addEventListener("load", function () {
              msIEVersion();
            });
          }

          if (!localStorage.getItem("--theme")) {
            /**
             * У нас есть элемент, которому мы через @ media (prefers-color-scheme: dark) навешиваем position: fixed
             * Следовательно, если у него фиксированное позиционирование, то у пользователя включена темная тема
             * И мы переключаем сайт на темную тему
             * Поддержка этого медизапроса работает только в хроме, сафари и firefox
             * https://developer.mozilla.org/ru/docs/Web/CSS/@media/prefers-color-scheme
             */
            if (window.matchMedia("(prefers-color-scheme: light)").matches) {
              document.documentElement.classList.remove("dark");
              colorThemeCheckbox.checked = false;

              if (metaColorTheme) {
                metaColorTheme.content = LIGHT_THEME_COLOR;
              }
            }
          }

          var onColorThemeCheckboxChange = function onColorThemeCheckboxChange() {
            document.activeElement.blur();
            var isDark = colorThemeCheckbox.checked ? true : false;
            document.documentElement.classList[isDark ? "add" : "remove"]("dark");

            if (metaColorTheme) {
              metaColorTheme.content = isDark ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;
            }

            localStorage.setItem("--theme", isDark ? "dark" : "light");
          };

          colorThemeCheckbox.addEventListener("change", onColorThemeCheckboxChange); // активируем цветовую схему, если в LocalStorage есть запись о последней, выбранной пользователем схеме

          if (localStorage.getItem("--theme")) {
            colorThemeCheckbox.checked = localStorage.getItem("--theme") === "dark" ? true : false;
            onColorThemeCheckboxChange();
          }
        };

        /***/
      },

    /***/ "./js/modules/companies-slider.js":
      /*!****************************************!*\
  !*** ./js/modules/companies-slider.js ***!
  \****************************************/
      /*! exports provided: initCompaniesSliders */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initCompaniesSliders", function () {
          return initCompaniesSliders;
        });
        var companiesSlider1 = document.querySelector(".companies-slider--1.swiper-container");
        var companiesSlider2 = document.querySelector(".companies-slider--2.swiper-container");
        var companiesSlidersWrap = document.querySelector(".wwdid__companies");

        var initCompaniesSliders = function initCompaniesSliders() {
          if (companiesSlider1 && companiesSlider2) {
            var companiesLength = companiesSlider1.querySelectorAll(".swiper-slide");
            var lastSlideNum = companiesLength.length - 1;
            var slideScrollSpeed = companiesLength.length * 1500;

            if (companiesLength.length > 1) {
              var isInViewport = function isInViewport(elem) {
                var bounding = elem.getBoundingClientRect();
                return bounding.top >= 0 && bounding.left >= 0 && bounding.bottom <= (window.innerHeight || document.documentElement.clientHeight) && bounding.right <= (window.innerWidth || document.documentElement.clientWidth);
              };

              var lastScrollTop = window.pageYOffset || document.documentElement.scrollTop;

              var onWindowScroll = function onWindowScroll() {
                if (isInViewport(companiesSlidersWrap)) {
                  var st = window.pageYOffset || document.documentElement.scrollTop;

                  if (st > lastScrollTop) {
                    // downscroll code
                    if (!companiesSlider1.classList.contains("scrolled") && !companiesSlider2.classList.contains("scrolled")) {
                      swiper.slideTo(lastSlideNum, slideScrollSpeed);
                      swiper2.slideTo(0, slideScrollSpeed);
                      companiesSlider1.classList.add("scrolled");
                      companiesSlider2.classList.add("scrolled");
                    }
                  } else {
                    // upscroll code
                    if (companiesSlider1.classList.contains("scrolled") && companiesSlider2.classList.contains("scrolled")) {
                      swiper.slideTo(0, slideScrollSpeed);
                      swiper2.slideTo(lastSlideNum, slideScrollSpeed);
                      companiesSlider1.classList.remove("scrolled");
                      companiesSlider2.classList.remove("scrolled");
                    }
                  }

                  lastScrollTop = st <= 0 ? 0 : st; // For Mobile or negative scrolling
                }
              }; // eslint-disable-next-line no-undef

              var swiper = new Swiper(companiesSlider1, {
                slidesPerView: "auto",
                spaceBetween: 20,
                speed: 2000,
                initialSlide: 0,
              }); // eslint-disable-next-line no-undef

              var swiper2 = new Swiper(companiesSlider2, {
                slidesPerView: "auto",
                spaceBetween: 20,
                speed: 2000,
                initialSlide: lastSlideNum,
              });
              window.addEventListener("scroll", onWindowScroll);
            }
          }
        };

        /***/
      },

    /***/ "./js/modules/configurator.js":
      /*!************************************!*\
  !*** ./js/modules/configurator.js ***!
  \************************************/
      /*! exports provided: initConfigurator */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initConfigurator", function () {
          return initConfigurator;
        });
        var configurator = document.querySelector(".configurator");
        var RATES = {
          SM1: "small-1",
          SM2: "small-2",
          BIG: "big",
          FRONT: "front",
        };

        var initConfigurator = function initConfigurator() {
          if (!configurator) {
            return;
          }

          var radioBtns = configurator.querySelectorAll('input[type="radio"]');
          var container = configurator.querySelector(".configurator-result__recommended-rates");
          var rates = configurator.querySelectorAll("[data-rate]");
          var panel = configurator.querySelector(".configurator-panel");
          var btn = configurator.querySelector(".configurator-result__discuss");
          var currentState = {
            complexity: "",
            react: "",
            time: "",
            quality: "",
          };
          var isPanelShown = false;
          var rateActiveEl = configurator.querySelector(".recommended-rate.active");
          var showPanelPosition;
          var hidePanelPosition; // момент, когда видна нижняя граница блока с результом

          var setContainerHeight = function setContainerHeight() {
            container.style.height = rateActiveEl.scrollHeight + "px";
          };

          var changeBtnMod = function changeBtnMod(rate) {
            if (rate === RATES.BIG) {
              btn.classList.remove("btn--red");
              btn.classList.add("btn--violet");
            } else if (rate === RATES.FRONT) {
              btn.classList.remove("btn--violet");
              btn.classList.add("btn--red");
            } else {
              btn.classList.remove("btn--violet");
              btn.classList.remove("btn--red");
            }
          };

          var changePanelMode = function changePanelMode(rate) {
            if (rate === RATES.BIG) {
              panel.classList.remove("configurator-panel--front");
              panel.classList.add("configurator-panel--big");
            } else if (rate === RATES.FRONT) {
              panel.classList.remove("configurator-panel--big");
              panel.classList.add("configurator-panel--front");
            } else {
              panel.classList.remove("configurator-panel--big");
              panel.classList.remove("configurator-panel--front");
            }
          };

          var showResult = function showResult(rateCurrent) {
            if (rateActiveEl.dataset.rate !== rateCurrent) {
              rates.forEach(function (rateEl) {
                rateEl.classList.remove("active");

                if (rateEl.dataset.rate === rateCurrent) {
                  rateEl.classList.add("active");
                  rateActiveEl = rateEl;
                }
              });
              setContainerHeight();
              changeBtnMod(rateCurrent);
              changePanelMode(rateCurrent);
            }
          };

          var showPanel = function showPanel() {
            isPanelShown = true;
            panel.classList.add("show");
          };

          var hidePanel = function hidePanel() {
            isPanelShown = false;
            panel.classList.remove("show");
          };

          var definePanelState = function definePanelState() {
            if (window.pageYOffset > showPanelPosition && window.pageYOffset < hidePanelPosition) {
              if (!isPanelShown) {
                showPanel();
              }
            } else {
              if (isPanelShown) {
                hidePanel();
              }
            }
          };

          var updatePanelTriggers = function updatePanelTriggers() {
            showPanelPosition = window.pageYOffset + configurator.getBoundingClientRect().top;
            hidePanelPosition = window.pageYOffset - window.innerHeight + configurator.getBoundingClientRect().bottom;
          };

          var onResize = function onResize() {
            setContainerHeight();
            updatePanelTriggers();
          };

          setContainerHeight();
          updatePanelTriggers();
          definePanelState();
          window.addEventListener("resize", onResize);
          window.addEventListener("resize", definePanelState);
          window.addEventListener("scroll", definePanelState);
          radioBtns.forEach(function (radio) {
            if (radio.checked) {
              currentState[radio.name] = radio.value;
            }

            radio.addEventListener("change", function () {
              currentState[radio.name] = radio.value;

              if (currentState.react === "1") {
                showResult(RATES.FRONT);
              } else if (currentState.complexity === "1") {
                showResult(RATES.BIG);
              } else if (currentState.time === "1") {
                showResult(RATES.SM2);
              } else {
                showResult(RATES.SM1);
              }
            });
          });
        };

        /***/
      },

    /***/ "./js/modules/form.js":
      /*!****************************!*\
  !*** ./js/modules/form.js ***!
  \****************************/
      /*! exports provided: initForm */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initForm", function () {
          return initForm;
        });
        var URL = "./scripts/mail.php";
        var form = document.querySelector("form");
        var formWrap = document.querySelector(".footer__form");
        var mailRegEx = /[a-zA-Z0-9]{1}[0-9]{3}-[0-9]{3}-[0-9]{4}/;
        var PHONE_MIN_LENGTH = 5;

        var showError = function showError(sth) {
          var input = sth.target || sth;
          var errorMessage = input.closest(".input-wrapper").querySelector(".input-wrapper__error-message");

          if (!errorMessage.classList.contains("input-wrapper__error-message--shown")) {
            errorMessage.classList.add("input-wrapper__error-message--shown");
            errorMessage.style.maxHeight = errorMessage.scrollHeight + "px";
          }
        };

        var hideError = function hideError(sth) {
          var input = sth.target || sth;
          var errorMessage = input.closest(".input-wrapper").querySelector(".input-wrapper__error-message");

          if (errorMessage.classList.contains("input-wrapper__error-message--shown")) {
            errorMessage.classList.remove("input-wrapper__error-message--shown");
            errorMessage.style.maxHeight = "0";
          }
        };

        var makeInputInvalid = function makeInputInvalid(input) {
          var inputWrapper = input.closest(".input-wrapper");
          showError(input);

          if (input.type === "checkbox") {
            input.addEventListener("change", hideError); // showError(input);
          } else {
            input.addEventListener("focus", showError); // input.addEventListener('blur', hideError);

            input.addEventListener("input", validateInput);
          }

          if (!inputWrapper.classList.contains("input-wrapper--error")) {
            inputWrapper.classList.add("input-wrapper--error");
          }
        };

        var makeInputValid = function makeInputValid(input) {
          if (input.type === "checkbox") {
            input.removeEventListener("change", hideError);
          } else {
            input.removeEventListener("focus", showError); // input.removeEventListener('blur', hideError);

            input.removeEventListener("input", validateInput);
          }

          input.closest(".input-wrapper").classList.remove("input-wrapper--error");
          hideError(input);
        };

        var validateName = function validateName(nameValue) {
          var digits = /\d+/;

          if (!nameValue.length) {
            return "Введите имя";
          }

          if (nameValue.length < 2) {
            return "Имя указано неверно";
          }

          if (nameValue.match(digits)) {
            return "Данное поле не может содержать цифры";
          }

          return false;
        };

        var validateEmail = function validateEmail(emailValue) {
          if (!emailValue.length) {
            return "Entrer votre Email";
          }

          if (!mailRegEx.test(emailValue)) {
            return "Veuillez saisir un e-mail valide";
          }

          return false;
        };

        var validatePhone = function validatePhone(telValue) {
          if (telValue.length > 0 && telValue.length !== PHONE_MIN_LENGTH) {
            return "Numéro de téléphone mal saisi";
          }

          return false;
        };

        var rules = {
          email: validateEmail,
          name: validateName,
          phone: validatePhone,
        };

        var validateInput = function validateInput(sthToCheck) {
          var input = sthToCheck.target || sthToCheck;
          var errorMessage = input.closest(".input-wrapper").querySelector(".input-wrapper__error-message");
          var error;

          if (rules.hasOwnProperty(input.name)) {
            error = rules[input.name](input.value);
          } else if (input.required) {
            if (!input.value.length) {
              error = "Заполните поле";
            } else if (!input.checkValidity) {
              error = "Поле заполнено неверно";
            }
          }

          if (error) {
            makeInputInvalid(input);
            errorMessage.innerText = error;
            return false;
          } else {
            makeInputValid(input);
            return true;
          }
        };

        var validateInputs = function validateInputs(inputs) {
          var flag = true;
          var result = true;
          inputs.forEach(function (item) {
            flag = validateInput(item);

            if (!flag) {
              result = flag;
            }
          });
          return result;
        };

        var initForm = function initForm() {
          if (!form || !formWrap) {
            return;
          }

          var phoneInput = form.querySelector('input[type="tel"]');
          var utmSourceInput = form.querySelector("#utm_source");
          var utmMediumInput = form.querySelector("#utm_medium");
          var utmCampaingInput = form.querySelector("#utm_campaign");
          var utmTermInput = form.querySelector("#utm_term");
          var utmReferrerInput = form.querySelector("#utm_referrer");
          var clientId = form.querySelector("#client_id");
          var submitButton = form.querySelector('button[type="submit"]');
          var search = window.location.search.replace("?", "");
          var formInputs = form.querySelectorAll(".input-wrapper input");
          var errorContainer = form.querySelector(".form__error-message");
          var successBtn = formWrap.querySelector(".form-success-message__button");
          /**
           * Собирает из url utm-get-параметры
           *
           * @return {Object} объект с utm-параметрами
           */

          var getUtmParams = function getUtmParams() {
            var getParams = {
              utm_source: "",
              utm_medium: "",
              utm_campaign: "",
              utm_term: "",
            };

            if (!search.length) {
              return getParams;
            }

            var searchParams = search.split("&");
            searchParams.forEach(function (item) {
              if (item.indexOf("utm_source") !== -1) {
                var match = item.match(/=.{1,}/);
                getParams["utm_source"] = match && match[0] ? match[0].slice(1) : "";
              }

              if (item.indexOf("utm_medium") !== -1) {
                var _match = item.match(/=.{1,}/);

                getParams["utm_medium"] = _match && _match[0] ? _match[0].slice(1) : "";
              }

              if (item.indexOf("utm_campaign") !== -1) {
                var _match2 = item.match(/=.{1,}/);

                getParams["utm_campaign"] = _match2 && _match2[0] ? _match2[0].slice(1) : "";
              }

              if (item.indexOf("utm_term") !== -1) {
                var _match3 = item.match(/=.{1,}/);

                getParams["utm_term"] = _match3 && _match3[0] ? _match3[0].slice(1) : "";
              }
            });
            return getParams;
          };
          /**
           * Вносит utm-параметры в форму, в соответствующие инпуты
           */

          var setUtmParams = function setUtmParams() {
            if (search.length) {
              var utmParams = getUtmParams();
              utmSourceInput.value = utmParams["utm_source"];
              utmMediumInput.value = utmParams["utm_medium"];
              utmCampaingInput.value = utmParams["utm_campaign"];
              utmTermInput.value = utmParams["utm_term"];
            }

            utmReferrerInput.value = document.referrer;
          };
          /**
           * Заполняет блок текстом ошибки, вернувшимся с сервера
           * @param {String} errorText текст ошибки с сервера
           */

          var showErrorMessage = function showErrorMessage(errorText) {
            formWrap.classList.add("form--error");
            errorContainer.textContent = errorText;
            errorContainer.style.maxHeight = errorContainer.scrollHeight + "px";
          };

          var showSuccessMessage = function showSuccessMessage() {
            formWrap.classList.add("form--success");
          };

          var hideErrorMessage = function hideErrorMessage() {
            formWrap.classList.remove("form--error");
            errorContainer.style.maxHeight = "0";
          };

          var hideSuccessMessage = function hideSuccessMessage() {
            formWrap.classList.remove("form--success");
          };
          /**
           * Очищает форму
           */

          var clearForm = function clearForm() {
            form.reset();
            hideErrorMessage();
          };
          /**
           * Убирает все пробелы в значении поля phone
           */

          var collapsePhoneValue = function collapsePhoneValue() {
            if (phoneInput) {
              phoneInput.value = phoneInput.value
                .split("")
                .filter(function (item) {
                  return !isNaN(Number(item));
                })
                .join("");
            }
          };
          /**
           * Устанавливает лоадер на время передачи данных с формы
           */

          var setFormLoader = function setFormLoader() {
            submitButton.classList.add("form__submit--loader");
          };
          /**
           * Удаляет лоадер
           */

          var removeFormLoader = function removeFormLoader() {
            submitButton.classList.remove("form__submit--loader");
          };

          setUtmParams();
          successBtn.addEventListener("click", hideSuccessMessage);
          submitButton.addEventListener("click", function (evt) {
            evt.preventDefault();

            if (validateInputs(formInputs)) {
              // clientId.value = ga.getAll()[0].get('clientId');
              collapsePhoneValue();
              setFormLoader();
              var data = new FormData(form);
              var xhr = new XMLHttpRequest();
              xhr.responseType = "json";
              xhr.open("POST", URL);
              xhr.send(data);
              xhr.addEventListener("load", function (e) {
                var target = e.target;

                try {
                  if (target.response.status === "success") {
                    clearForm();
                    showSuccessMessage();
                    dataLayer.push({
                      event: "formSubmitted",
                      formName: "Contact Us",
                    });
                  } else if (target.response.message) {
                    showErrorMessage(target.response.message);
                  } else {
                    showErrorMessage("Внутренняя ошибка сервера");
                  }

                  removeFormLoader();
                } catch (err) {
                  showErrorMessage(err);
                  removeFormLoader();
                }
              });
              xhr.addEventListener("error", function () {
                createServerErrorMessageBlock("Произошла ошибка соединения");
                removeFormLoader();
              });
            }
          });
        };

        /***/
      },

    /***/ "./js/modules/header.js":
      /*!******************************!*\
  !*** ./js/modules/header.js ***!
  \******************************/
      /*! exports provided: fixHeader, headerScroll, menuToggleFunc, getHeaderHeight */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fixHeader", function () {
          return fixHeader;
        });
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "headerScroll", function () {
          return headerScroll;
        });
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "menuToggleFunc", function () {
          return menuToggleFunc;
        });
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getHeaderHeight", function () {
          return getHeaderHeight;
        });
        var menuToggle = document.querySelector(".header__menu-toggle");
        var header = document.querySelector(".header");
        var headerNavigation = document.querySelector(".header__menu");
        var breakpointMd = window.matchMedia("(max-width: 1023px)");
        var projectsBtn = document.querySelector(".header__menu-button");
        var headerLogoWrapper = document.querySelector(".header__logo-wrapper");

        var getHeaderHeight = function getHeaderHeight() {
          if (header) {
            if (breakpointMd.matches) {
              return headerLogoWrapper.offsetHeight;
            } else {
              return header.offsetHeight;
            }
          }
        };

        var openMenu = function openMenu() {
          menuToggle.ariaPressed = "true";
          header.classList.add("header--opened", "header--menu-shift");
          window.disableBodyScroll(headerNavigation);
          setTimeout(function () {
            header.classList.remove("header--menu-shift");
          }, 10);
          menuToggle.classList.add("no-pointer");
          setTimeout(function () {
            menuToggle.classList.remove("no-pointer");
          }, 300);
        };

        var closeMenu = function closeMenu() {
          menuToggle.ariaPressed = "false";
          header.classList.add("header--menu-shift");
          window.enableBodyScroll(headerNavigation);
          menuToggle.classList.add("no-pointer");
          setTimeout(function () {
            menuToggle.classList.remove("no-pointer");
            header.classList.remove("header--opened", "header--menu-shift");
          }, 300);
        };

        var menuToggleFunc = function menuToggleFunc() {
          if (menuToggle) {
            menuToggle.addEventListener("click", function () {
              if (menuToggle.ariaPressed === "true") {
                closeMenu();
              } else {
                openMenu();
              }
            });
          }

          if (projectsBtn) {
            projectsBtn.addEventListener("click", function () {
              if (menuToggle.ariaPressed === "true") {
                closeMenu();
              }
            });
          }

          breakpointMd.addListener(closeMenu);
        };

        var fixHeader = function fixHeader() {
          if (!header) {
            return;
          }

          if (window.pageYOffset >= 1) {
            header.classList.add("header--scrolled");
          } else {
            header.classList.remove("header--scrolled");
          }
        };

        var headerScroll = function headerScroll() {
          window.addEventListener("scroll", function () {
            fixHeader();
          });
          window.addEventListener("load", function () {
            fixHeader();
          });
        };

        /***/
      },

    /***/ "./js/modules/init-activity-video.js":
      /*!*******************************************!*\
  !*** ./js/modules/init-activity-video.js ***!
  \*******************************************/
      /*! exports provided: initActivityVideo */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initActivityVideo", function () {
          return initActivityVideo;
        });
        /* harmony import */ var _utils_modal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/modal */ "./js/utils/modal.js");

        var ratio = 16 / 9;
        var activityVideos = document.querySelectorAll(".activity-video");
        var modalVideo = document.querySelector(".modal--video");

        var initActivityVideo = function initActivityVideo() {
          if (!activityVideos.length || !modalVideo) {
            return;
          }

          var modalWrapper = modalVideo.querySelector(".modal__wrapper");
          var modalContent = modalVideo.querySelector(".modal__content");
          var iframe = modalVideo.querySelector("iframe");

          var clearSrc = function clearSrc() {
            iframe.removeAttribute("src");
          };

          var clearSize = function clearSize() {
            modalContent.removeAttribute("style");
          };

          var setVideoContainerSize = function setVideoContainerSize() {
            clearSize();
            var style = modalWrapper.currentStyle || window.getComputedStyle(modalWrapper);
            var availableWidth = modalWrapper.clientWidth - parseInt(style.paddingLeft, 10) - parseInt(style.paddingRight, 10);
            var availableHeight = modalWrapper.clientHeight - parseInt(style.paddingTop, 10) - parseInt(style.paddingBottom, 10);

            if (availableWidth && availableHeight) {
              var contentRatio = availableWidth / availableHeight;

              if (contentRatio > ratio) {
                modalContent.style.width = (availableHeight * 16) / 9 + "px";
                modalContent.style.height = availableHeight + "px";
              } else if (contentRatio < ratio) {
                modalContent.style.height = (availableWidth * 9) / 16 + "px";
                modalContent.style.width = availableWidth + "px";
              }
            }
          };

          window.addEventListener("resize", setVideoContainerSize);
          window.addEventListener("orientationchange", setVideoContainerSize);
          Object(_utils_modal__WEBPACK_IMPORTED_MODULE_0__["setupModal"])(modalVideo, clearSrc, activityVideos, setVideoContainerSize, false);
          activityVideos.forEach(function (activityVideo) {
            activityVideo.addEventListener("click", function (evt) {
              evt.preventDefault();
              iframe.setAttribute("src", activityVideo.getAttribute("href"));
            });
          });
        };

        /***/
      },

    /***/ "./js/modules/init-animation.js":
      /*!**************************************!*\
  !*** ./js/modules/init-animation.js ***!
  \**************************************/
      /*! exports provided: initAnimation */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initAnimation", function () {
          return initAnimation;
        });
        /* harmony import */ var _vendor_move_to__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../vendor/move-to */ "./js/vendor/move-to.js");
        /* harmony import */ var _vendor_move_to__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(_vendor_move_to__WEBPACK_IMPORTED_MODULE_0__);
        /* harmony import */ var _header__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./header */ "./js/modules/header.js");

        var screens = document.querySelectorAll("[data-animate]");
        var scrollBlocks = document.querySelectorAll("[data-scroll]");
        var anchors = document.querySelectorAll("[data-target]");
        var breakpoint = window.matchMedia("(min-width:1024px)");
        var SCROLL_SHIFT = 200;
        var elTop;
        var windowHeight; // eslint-disable-next-line no-undef

        var moveTo = new _vendor_move_to__WEBPACK_IMPORTED_MODULE_0___default.a({
          tolerance: Object(_header__WEBPACK_IMPORTED_MODULE_1__["getHeaderHeight"])() || 78,
          duration: 800,
          easing: "easeOutQuart",
        });

        var returnAnimatePoint = function returnAnimatePoint(el) {
          elTop = el.getBoundingClientRect().top;
          windowHeight = window.innerHeight;
          return windowHeight / 1.4 - elTop;
        };

        var returnScrollPoint = function returnScrollPoint(el) {
          elTop = el.getBoundingClientRect().top;
          windowHeight = window.innerHeight;
          return windowHeight - SCROLL_SHIFT - elTop;
        };

        var trackingScreenBlock = function trackingScreenBlock() {
          screens.forEach(function (screen) {
            if (returnAnimatePoint(screen) > 0 && !screen.classList.contains("show")) {
              screen.classList.add("show");
            }
          });
          scrollBlocks.forEach(function (block) {
            if (returnScrollPoint(block) > 0 && !block.classList.contains("scrolled") && !block.classList.contains("show") && breakpoint.matches) {
              block.classList.add("scrolled");
              moveTo.move(block);
              setTimeout(function () {
                block.classList.remove("scrolled");
              }, 800);
            }
          });
        };

        var trackingToAnchor = function trackingToAnchor() {
          anchors.forEach(function (anchor) {
            moveTo.registerTrigger(anchor);
          });
        };

        var initAnimation = function initAnimation() {
          if (screens.length) {
            trackingScreenBlock();
            window.addEventListener("scroll", trackingScreenBlock);
            window.addEventListener("orientationchange", trackingScreenBlock);
          }

          if (anchors.length) {
            trackingToAnchor();
          }
        };

        /***/
      },

    /***/ "./js/modules/init-expertise-counter.js":
      /*!**********************************************!*\
  !*** ./js/modules/init-expertise-counter.js ***!
  \**********************************************/
      /*! exports provided: initExpertiseCounter */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initExpertiseCounter", function () {
          return initExpertiseCounter;
        });
        var initExpertiseCounter = function initExpertiseCounter() {
          var expertiseItems = document.querySelectorAll(".expertise-card");

          if (!expertiseItems.length) {
            return;
          }

          expertiseItems.forEach(function (expertiseItem, index) {
            var sticks = document.createElement("ul");
            sticks.classList.add("expertise-card__counter");

            for (var i = 0; i < expertiseItems.length; i++) {
              var stick = document.createElement("li");
              stick.classList.add("expertise-card__stick");

              if (i <= index) {
                stick.classList.add("expertise-card__stick--active");
              }

              sticks.appendChild(stick);
            }

            expertiseItem.insertAdjacentElement("afterbegin", sticks);
          });
        };

        /***/
      },

    /***/ "./js/modules/init-footer-fix.js":
      /*!***************************************!*\
  !*** ./js/modules/init-footer-fix.js ***!
  \***************************************/
      /*! exports provided: initFooterFix, coverFooter */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initFooterFix", function () {
          return initFooterFix;
        });
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "coverFooter", function () {
          return coverFooter;
        });
        /* harmony import */ var _header__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./header */ "./js/modules/header.js");

        var breakpointXl = window.matchMedia("(min-width: 1440px");
        var wrapper = document.querySelector(".wrapper");
        var main = document.querySelector("main");
        var footer = document.querySelector("footer");

        var is404 = function is404() {
          return main.classList.contains("page-404");
        };

        var isFitViewport = function isFitViewport(el) {
          if (breakpointXl.matches) {
            return el.scrollHeight <= window.innerHeight;
          } else {
            return el.scrollHeight <= window.innerHeight - Object(_header__WEBPACK_IMPORTED_MODULE_0__["getHeaderHeight"])() / 2;
          }
        };

        var isFooterVisible = function isFooterVisible() {
          return footer.getBoundingClientRect().bottom > main.getBoundingClientRect().bottom;
        };

        var coverFooter = function coverFooter() {
          if (isFooterVisible()) {
            footer.classList.remove("footer--cover");
          } else {
            if (!footer.classList.contains("footer--cover")) {
              footer.classList.add("footer--cover");
            }
          }
        };

        var initFooterFix = function initFooterFix() {
          if (!footer) {
            return;
          }

          var pseudoFooterAnchor = document.createElement("div");
          pseudoFooterAnchor.classList.add("pseudo-footer");
          pseudoFooterAnchor.id = "footer";
          pseudoFooterAnchor.setAttribute("aria-hidden", "true");

          var addPseudoFooterAnchor = function addPseudoFooterAnchor() {
            footer.id = "";
            main.appendChild(pseudoFooterAnchor);
          };

          var removePseudoFooterAnchor = function removePseudoFooterAnchor() {
            main.removeChild(pseudoFooterAnchor);
            footer.id = "footer";
          };

          var defineFooterState = function defineFooterState() {
            if (!is404() && isFitViewport(footer)) {
              if (!footer.classList.contains("footer--fixed")) {
                addPseudoFooterAnchor();
                footer.classList.add("footer--fixed");
              }

              wrapper.style.paddingBottom = footer.scrollHeight + "px";
              window.addEventListener("scroll", coverFooter);
            } else {
              if (document.querySelector(".pseudo-footer")) {
                removePseudoFooterAnchor();
              }

              footer.classList.remove("footer--fixed");
              footer.classList.remove("footer--cover");
              wrapper.style.paddingBottom = null;
              window.removeEventListener("scroll", coverFooter);
            }
          };

          defineFooterState();
          coverFooter();
          window.addEventListener("resize", defineFooterState);
          window.addEventListener("orientationchange", defineFooterState);
        };

        /***/
      },

    /***/ "./js/modules/init-input-wrapper.js":
      /*!******************************************!*\
  !*** ./js/modules/init-input-wrapper.js ***!
  \******************************************/
      /*! exports provided: initInputWrappers */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initInputWrappers", function () {
          return initInputWrappers;
        });
        var inputWrappers = document.querySelectorAll(".input-wrapper");

        var initInputWrappers = function initInputWrappers() {
          inputWrappers.forEach(function (el) {
            var input = el.querySelector("input") || el.querySelector("textarea");
            el.addEventListener("input", function () {
              if (input.value) {
                el.classList.add("input-wrapper--has-value");
              } else {
                el.classList.remove("input-wrapper--has-value");
              }
            });

            if (input.type === "radio" || input.type === "checkbox") {
              input.addEventListener("change", function () {
                document.activeElement.blur();
              });
            }
          });
        };

        /***/
      },

    /***/ "./js/modules/init-modals.js":
      /*!***********************************!*\
  !*** ./js/modules/init-modals.js ***!
  \***********************************/
      /*! exports provided: initModals */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initModals", function () {
          return initModals;
        });
        /* harmony import */ var _utils_modal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/modal */ "./js/utils/modal.js");

        var modals = document.querySelectorAll(".modal");
        var modalFeedback = document.querySelector(".modal--feedback");
        var modalFeedbackBtns = document.querySelectorAll('[data-modal="feedback"]');
        var modalSuccess = document.querySelector(".modal--success");
        var modalSuccessBtns = document.querySelectorAll('[data-modal="success"]'); // аргументы setupModal(modal, closeCallback, modalBtns, openCallback, noPrevDefault, preventScrollLock)
        // возможна инициализация только с первыми аргументом,
        // если вам нужно открывать модалку в другом месте под какими-нибудь условиями

        var initModals = function initModals() {
          // фикс для редких случаев, когда модалка появляется при загрузке страницы
          window.addEventListener("load", function () {
            if (modals.length) {
              modals.forEach(function (el) {
                setTimeout(function () {
                  el.classList.remove("modal--preload");
                }, 100);
              });
            }
          });

          if (modalFeedback && modalFeedbackBtns.length) {
            Object(_utils_modal__WEBPACK_IMPORTED_MODULE_0__["setupModal"])(modalFeedback, false, modalFeedbackBtns, false, false);
          }

          if (modalSuccess && modalSuccessBtns.length) {
            Object(_utils_modal__WEBPACK_IMPORTED_MODULE_0__["setupModal"])(modalSuccess, false, modalSuccessBtns);
          }
        };

        /***/
      },

    /***/ "./js/modules/init-phone-mask.js":
      /*!***************************************!*\
  !*** ./js/modules/init-phone-mask.js ***!
  \***************************************/
      /*! exports provided: initPhoneMask */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initPhoneMask", function () {
          return initPhoneMask;
        });
        var phoneInputs = document.querySelectorAll('input[type="tel"]');
        var COUNTRY_CODE = "+1";

        var inputHandler = function inputHandler(_ref) {
          var target = _ref.target;
          var matrix = "".concat(COUNTRY_CODE, " (___) ___-____");
          var def = matrix.replace(/\D/g, "");
          var i = 0;
          var val = target.value.replace(/\D/g, "");

          if (def.length >= val.length) {
            val = def;
          }

          target.value = matrix.replace(/./g, function (a) {
            // eslint-disable-next-line no-nested-ternary
            return /[_\d]/.test(a) && i < val.length ? val.charAt(i++) : i >= val.length ? "" : a;
          });
        };

        var focusHandler = function focusHandler(_ref2) {
          var target = _ref2.target;

          if (!target.value) {
            target.value = COUNTRY_CODE;
            target.addEventListener("input", inputHandler);
            target.addEventListener("blur", blurHandler);
          }
        };

        var blurHandler = function blurHandler(_ref3) {
          var target = _ref3.target;

          if (target.value === COUNTRY_CODE) {
            target.value = "";
            target.removeEventListener("input", inputHandler);
            target.removeEventListener("blur", blurHandler);
          }
        };

        var initPhoneMask = function initPhoneMask() {
          if (phoneInputs.length) {
            phoneInputs.forEach(function (input) {
              input.addEventListener("focus", focusHandler);
            });
          }
        };

        /***/
      },

    /***/ "./js/modules/init-scroll-to.js":
      /*!**************************************!*\
  !*** ./js/modules/init-scroll-to.js ***!
  \**************************************/
      /*! exports provided: initScrollTo */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initScrollTo", function () {
          return initScrollTo;
        });
        /* harmony import */ var _vendor_move_to__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../vendor/move-to */ "./js/vendor/move-to.js");
        /* harmony import */ var _vendor_move_to__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(_vendor_move_to__WEBPACK_IMPORTED_MODULE_0__);
        /* harmony import */ var _header__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./header */ "./js/modules/header.js");

        var links = document.querySelectorAll("[data-anchor]");

        var getDuration = function getDuration(distance, step) {
          var defaultDuration = 500;
          var durationIncrement = 100;
          var count = Math.ceil(distance / step);
          return defaultDuration + durationIncrement * count;
        };

        var getElTop = function getElTop(el) {
          return el.getBoundingClientRect().top + window.pageYOffset;
        };

        var initScrollTo = function initScrollTo() {
          if (!links.length) {
            return;
          }

          links.forEach(function (link) {
            link.addEventListener("click", function (evt) {
              evt.preventDefault();
              document.activeElement.blur();
              var target = document.querySelector("#" + link.dataset.anchor);
              var targetTopPosition = getElTop(target);
              var linkTopPosition = getElTop(link);
              var distance = targetTopPosition - linkTopPosition;
              var moveTo = new _vendor_move_to__WEBPACK_IMPORTED_MODULE_0___default.a({
                tolerance: Object(_header__WEBPACK_IMPORTED_MODULE_1__["getHeaderHeight"])(),
                duration: getDuration(distance, 300),
                easing: "easeOutQuart",
                container: window,
              });
              moveTo.move(target);
            });
          });
        };

        /***/
      },

    /***/ "./js/modules/init-table-scroll.js":
      /*!*****************************************!*\
  !*** ./js/modules/init-table-scroll.js ***!
  \*****************************************/
      /*! exports provided: initTableScroll */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initTableScroll", function () {
          return initTableScroll;
        });
        var initTableScroll = function initTableScroll() {
          var article = document.querySelector(".text-content");

          if (!article) {
            return;
          }

          var tableList = article.querySelectorAll("table");

          function addWrap(el, wrapperClass) {
            var divWrapper = document.createElement("div");
            divWrapper.className = wrapperClass;
            el.parentNode.insertBefore(divWrapper, el);
            divWrapper.appendChild(el);
            return divWrapper;
          }

          function addPaddingDiv(el, divClass) {
            var divPadding = document.createElement("div");
            divPadding.className = divClass;
            el.parentNode.appendChild(divPadding);
            return divPadding;
          }

          function resetTableSize(table) {
            if (!table.closest(".text-content__table")) {
              addWrap(table, "text-content__table");
              addWrap(table, "text-content__table-inner");
              addPaddingDiv(table, "text-content__table-padding");
            }
          }

          if (tableList.length) {
            tableList.forEach(resetTableSize);
          }
        };

        /***/
      },

    /***/ "./js/modules/join-mail.js":
      /*!*********************************!*\
  !*** ./js/modules/join-mail.js ***!
  \*********************************/
      /*! exports provided: initJoinMail */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initJoinMail", function () {
          return initJoinMail;
        });
        var joinMail = document.querySelector(".join__mail");

        var initJoinMail = function initJoinMail() {
          if (!joinMail) {
            return;
          }

          var parent = joinMail.closest(".join__contacts");
          joinMail.addEventListener("mouseenter", function () {
            if (!parent.classList.contains("hover")) {
              parent.classList.add("hover");
            }
          });
          joinMail.addEventListener("mouseleave", function () {
            parent.classList.remove("hover");
          });
        };

        /***/
      },

    /***/ "./js/modules/slider.js":
      /*!******************************!*\
  !*** ./js/modules/slider.js ***!
  \******************************/
      /*! exports provided: initSliders */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initSliders", function () {
          return initSliders;
        });
        var sliders = document.querySelectorAll(".slider");

        var initSliders = function initSliders() {
          if (!sliders.length) {
            return;
          }

          var sliderControls = document.querySelectorAll(".slider-controls__btn");
          sliders.forEach(function (slider) {
            var btnNext = slider.querySelector(".slider-controls__btn--next");
            var btnPrev = slider.querySelector(".slider-controls__btn--prev");
            var isInfinite = slider.classList.contains("slider--loop");
            var slides = slider.querySelectorAll(".swiper-slide");
            var wrapper = slider.querySelector(".swiper-wrapper"); // eslint-disable-next-line no-undef

            var swiperSlider = new Swiper(slider.querySelector(".slider__container"), {
              spaceBetween: 32,
              slidesPerView: "1",
              watchOverflow: true,
              autoHeight: true,
              loop: isInfinite,
              navigation: {
                nextEl: btnNext,
                prevEl: btnPrev,
              },
              breakpoints: {
                600: {
                  spaceBetween: 0,
                  slidesPerView: "auto",
                  autoHeight: false,
                },
              },
              on: {
                breakpoint: function breakpoint() {
                  wrapper.style.height = "auto";
                  slides.forEach(function (slide) {
                    slide.style.width = null;
                  });
                },
              },
            });
          });
          sliderControls.forEach(function (btn) {
            btn.addEventListener("click", function () {
              document.activeElement.blur();
            });
          });
        };

        /***/
      },

    /***/ "./js/modules/wwdid-slider.js":
      /*!************************************!*\
  !*** ./js/modules/wwdid-slider.js ***!
  \************************************/
      /*! exports provided: initWwdidSlider */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initWwdidSlider", function () {
          return initWwdidSlider;
        });
        var wwdidSlider = document.querySelector(".wwdid-slider.swiper-container");
        var wwdidSection = document.querySelector(".wwdid");
        var swiperWwdid; // eslint-disable-next-line no-undef

        var initSwiper = function initSwiper(slider, slideSpeed) {
          return new Swiper(slider, {
            speed: 800,
            slidesPerView: 1,
            loop: true,
            threshold: 20,
            autoplay: {
              delay: slideSpeed,
            },
            pagination: {
              el: ".wwdid-slider__pagination",
              type: "fraction",
            },
            navigation: {
              nextEl: ".wwdid-slider .slider-controls__btn--next",
              prevEl: ".wwdid-slider .slider-controls__btn--prev",
            },
            effect: "fade",
            fadeEffect: {
              crossFade: true,
            },
          });
        };

        var opPointReach = function opPointReach() {
          if (wwdidSection.getBoundingClientRect().top - window.innerHeight < 0) {
            swiperWwdid.autoplay.start();
          }
        };

        var initWwdidSlider = function initWwdidSlider() {
          if (wwdidSlider) {
            var wwdidSlides = wwdidSlider.querySelectorAll(".swiper-slide");
            var transitionDuration = +wwdidSlider.dataset.speed || 5000;

            if (wwdidSlides.length > 1) {
              setTimeout(function () {
                // eslint-disable-next-line no-unused-vars
                swiperWwdid = initSwiper(wwdidSlider, transitionDuration);
                swiperWwdid.autoplay.stop();
              }, 100);
              setTimeout(function () {
                opPointReach();
              }, 150);
              window.addEventListener("scroll", opPointReach);
            }
          }
        };

        /***/
      },

    /***/ "./js/utils/ie-fix.js":
      /*!****************************!*\
  !*** ./js/utils/ie-fix.js ***!
  \****************************/
      /*! exports provided: ieFix */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ieFix", function () {
          return ieFix;
        });
        /* eslint-disable */
        var ieFix = function ieFix() {
          // Polyfills
          //---------------------------------
          // forEach
          // CustomEvent
          // includes
          // matches
          // closest
          // prepend
          // append
          // before
          // remove
          // startsWith
          // forEach
          if (window.NodeList && !NodeList.prototype.forEach) {
            NodeList.prototype.forEach = function (callback, thisArg) {
              thisArg = thisArg || window;

              for (var i = 0; i < this.length; i++) {
                callback.call(thisArg, this[i], i, this);
              }
            };
          } // CustomEvent

          (function () {
            if (typeof window.CustomEvent === "function") return false;

            function CustomEvent(event, params) {
              params = params || {
                bubbles: false,
                cancelable: false,
                detail: undefined,
              };
              var evt = document.createEvent("CustomEvent");
              evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);
              return evt;
            }

            CustomEvent.prototype = window.Event.prototype;
            window.CustomEvent = CustomEvent;
          })(); // includes

          if (!Array.prototype.includes) {
            Object.defineProperty(Array.prototype, "includes", {
              value: function value(searchElement, fromIndex) {
                if (this == null) {
                  throw new TypeError('"this" is null or not defined');
                }

                var o = Object(this);
                var len = o.length >>> 0;

                if (len === 0) {
                  return false;
                }

                var n = fromIndex | 0;
                var k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);

                function sameValueZero(x, y) {
                  return x === y || (typeof x === "number" && typeof y === "number" && isNaN(x) && isNaN(y));
                }

                while (k < len) {
                  if (sameValueZero(o[k], searchElement)) {
                    return true;
                  }

                  k++;
                }

                return false;
              },
            });
          } // matches

          if (!Element.prototype.matches) {
            Element.prototype.matches =
              Element.prototype.matchesSelector ||
              Element.prototype.mozMatchesSelector ||
              Element.prototype.msMatchesSelector ||
              Element.prototype.oMatchesSelector ||
              Element.prototype.webkitMatchesSelector ||
              function (s) {
                var matches = (this.document || this.ownerDocument).querySelectorAll(s);
                var i = matches.length; // eslint-disable-next-line no-empty

                while (--i >= 0 && matches.item(i) !== this) {}

                return i > -1;
              };
          } // closest

          if (!Element.prototype.matches) {
            Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;
          }

          if (!Element.prototype.closest) {
            Element.prototype.closest = function (s) {
              var el = this;

              do {
                if (el.matches(s)) {
                  return el;
                }

                el = el.parentElement || el.parentNode;
              } while (el !== null && el.nodeType === 1);

              return null;
            };
          } // prepend

          (function (arr) {
            arr.forEach(function (item) {
              if (item.hasOwnProperty("prepend")) {
                return;
              }

              Object.defineProperty(item, "prepend", {
                configurable: true,
                enumerable: true,
                writable: true,
                value: function prepend() {
                  // eslint-disable-next-line prefer-rest-params
                  var argArr = Array.prototype.slice.call(arguments);
                  var docFrag = document.createDocumentFragment();
                  argArr.forEach(function (argItem) {
                    var isNode = argItem instanceof Node;
                    docFrag.appendChild(isNode ? argItem : document.createTextNode(String(argItem)));
                  });
                  this.insertBefore(docFrag, this.firstChild);
                },
              });
            });
          })([Element.prototype, Document.prototype, DocumentFragment.prototype]); // append

          (function (arr) {
            arr.forEach(function (item) {
              if (item.hasOwnProperty("append")) {
                return;
              }

              Object.defineProperty(item, "append", {
                configurable: true,
                enumerable: true,
                writable: true,
                value: function append() {
                  // eslint-disable-next-line prefer-rest-params
                  var argArr = Array.prototype.slice.call(arguments);
                  var docFrag = document.createDocumentFragment();
                  argArr.forEach(function (argItem) {
                    var isNode = argItem instanceof Node;
                    docFrag.appendChild(isNode ? argItem : document.createTextNode(String(argItem)));
                  });
                  this.appendChild(docFrag);
                },
              });
            });
          })([Element.prototype, Document.prototype, DocumentFragment.prototype]); // before

          (function (arr) {
            arr.forEach(function (item) {
              if (item.hasOwnProperty("before")) {
                return;
              }

              Object.defineProperty(item, "before", {
                configurable: true,
                enumerable: true,
                writable: true,
                value: function before() {
                  // eslint-disable-next-line prefer-rest-params
                  var argArr = Array.prototype.slice.call(arguments);
                  var docFrag = document.createDocumentFragment();
                  argArr.forEach(function (argItem) {
                    var isNode = argItem instanceof Node;
                    docFrag.appendChild(isNode ? argItem : document.createTextNode(String(argItem)));
                  });
                  this.parentNode.insertBefore(docFrag, this);
                },
              });
            });
          })([Element.prototype, CharacterData.prototype, DocumentType.prototype]); // remove

          (function (arr) {
            arr.forEach(function (item) {
              if (item.hasOwnProperty("remove")) {
                return;
              }

              Object.defineProperty(item, "remove", {
                configurable: true,
                enumerable: true,
                writable: true,
                value: function remove() {
                  if (this.parentNode !== null) {
                    this.parentNode.removeChild(this);
                  }
                },
              });
            });
          })([Element.prototype, CharacterData.prototype, DocumentType.prototype]); // startsWith

          if (!String.prototype.startsWith) {
            // eslint-disable-next-line no-extend-native
            Object.defineProperty(String.prototype, "startsWith", {
              value: function value(search, rawPos) {
                var pos = rawPos > 0 ? rawPos | 0 : 0;
                return this.substring(pos, pos + search.length) === search;
              },
            });
          } // Fixes
          //---------------------------------
          // ie download

          var ie11Download = function ie11Download(el) {
            if (el.href === "") {
              throw Error("The element has no href value.");
            }

            var filename = el.getAttribute("download");

            if (filename === null || filename === "") {
              var tmp = el.href.split("/");
              filename = tmp[tmp.length - 1];
            }

            el.addEventListener("click", function (evt) {
              evt.preventDefault();
              var xhr = new XMLHttpRequest();

              xhr.onloadstart = function () {
                xhr.responseType = "blob";
              };

              xhr.onload = function () {
                navigator.msSaveOrOpenBlob(xhr.response, filename);
              };

              xhr.open("GET", el.href, true);
              xhr.send();
            });
          };

          if (window.navigator.msSaveBlob) {
            var downloadLinks = document.querySelectorAll("a[download]");

            if (downloadLinks.length) {
              downloadLinks.forEach(function (el) {
                ie11Download(el);
              });
            }
          } // ie svg focus fix

          var unfocusableSvg = function unfocusableSvg() {
            if (!(!!window.MSInputMethodContext && !!document.documentMode)) {
              return;
            }

            var svg = document.querySelectorAll("svg");
            svg.forEach(function (el) {
              el.setAttribute("focusable", "false");
            });
          };

          unfocusableSvg(); //ie footer nailing

          var ieFooterNailing = function ieFooterNailing() {
            var main = document.querySelector("main");
            var header = document.querySelector(".header");
            var footer = document.querySelector(".footer");
            var headerH;
            var footerH;
            var mainHMin;

            if (!main || !(!!window.MSInputMethodContext && !!document.documentMode)) {
              return;
            }

            var mainHeight = function mainHeight() {
              // eslint-disable-next-line no-unused-expressions
              header ? (headerH = header.getBoundingClientRect().height) : (headerH = 0); // eslint-disable-next-line no-unused-expressions

              footer ? (footerH = footer.getBoundingClientRect().height) : (footerH = 0);
              mainHMin = window.innerHeight;
              main.style.minHeight = mainHMin - (headerH + footerH) + "px";
            };

            document.addEventListener("loadDOMContentLoaded", mainHeight());
            window.addEventListener("resize", mainHeight);
          };

          ieFooterNailing();
        };

        /***/
      },

    /***/ "./js/utils/ios-vh-fix.js":
      /*!********************************!*\
  !*** ./js/utils/ios-vh-fix.js ***!
  \********************************/
      /*! exports provided: iosVhFix */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "iosVhFix", function () {
          return iosVhFix;
        });
        var isIos = function isIos() {
          return (
            ["iPad Simulator", "iPhone Simulator", "iPod Simulator", "iPad", "iPhone", "iPod"].includes(navigator.platform) || // iPad on iOS 13 detection
            (navigator.userAgent.includes("Mac") && "ontouchend" in document)
          );
        };

        var iosVhFix = function iosVhFix() {
          if (!(!!window.MSInputMethodContext && !!document.documentMode)) {
            if (isIos()) {
              var vh = window.innerHeight * 0.01;
              document.documentElement.style.setProperty("--vh", "".concat(vh, "px"));
              window.addEventListener("resize", function () {
                vh = window.innerHeight * 0.01;
                document.documentElement.style.setProperty("--vh", "".concat(vh, "px"));
              });
            }
          }
        };

        /***/
      },

    /***/ "./js/utils/modal.js":
      /*!***************************!*\
  !*** ./js/utils/modal.js ***!
  \***************************/
      /*! exports provided: setupModal, openModal, closeModal */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setupModal", function () {
          return setupModal;
        });
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "openModal", function () {
          return openModal;
        });
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "closeModal", function () {
          return closeModal;
        });
        var openModal = function openModal(modal, callback, preventScrollLock) {
          modal.classList.add("modal--active");

          if (callback) {
            callback();
          }

          if (!preventScrollLock) {
            window.disableBodyScroll(modal, {
              reserveScrollBarGap: true,
            });
          }
        };

        var closeModal = function closeModal(modal, callback, preventScrollLock) {
          modal.classList.remove("modal--active");
          modal.classList.remove("modal--in-modal");

          if (callback) {
            callback();
          }

          if (!preventScrollLock) {
            setTimeout(function () {
              window.enableBodyScroll(modal);
            }, 300);
          }
        };

        var onEscPress = function onEscPress(evt, modal, callback) {
          var isEscKey = evt.key === "Escape" || evt.key === "Esc";

          if (isEscKey && modal.classList.contains("modal--active")) {
            evt.preventDefault();
            closeModal(modal, callback);
          }
        };

        var setModalListeners = function setModalListeners(modal, closeCallback, preventScrollLock) {
          var overlay = modal.querySelector(".modal__overlay");
          var closeBtn = modal.querySelector(".modal__close-btn");
          closeBtn.addEventListener("click", function () {
            closeModal(modal, closeCallback, preventScrollLock);
          });
          overlay.addEventListener("click", function () {
            closeModal(modal, closeCallback, preventScrollLock);
          });
          document.addEventListener("keydown", function (evt) {
            onEscPress(evt, modal, closeCallback, preventScrollLock);
          });
        };

        var setupModal = function setupModal(modal, closeCallback, modalBtns, openCallback, noPrevDefault, preventScrollLock) {
          if (modalBtns) {
            modalBtns.forEach(function (btn) {
              btn.addEventListener("click", function (evt) {
                if (!noPrevDefault) {
                  evt.preventDefault();
                }

                openModal(modal, openCallback, preventScrollLock);
              });
            });
          }

          setModalListeners(modal, closeCallback, preventScrollLock);
        };

        /***/
      },

    /***/ "./js/vendor/move-to.js":
      /*!******************************!*\
  !*** ./js/vendor/move-to.js ***!
  \******************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";
        /*!
         * MoveTo - A lightweight scroll animation javascript library without any dependency.
         * Version 1.8.3 (21-07-2019 00:32)
         * Licensed under MIT
         * Copyright 2019 Hasan Aydoğdu <hsnaydd@gmail.com>
         */

        var MoveTo = (function () {
          /**
           * Defaults
           * @type {object}
           */
          var defaults = {
            tolerance: 0,
            duration: 800,
            easing: "easeOutQuart",
            container: window,
            callback: function callback() {},
          };
          /**
           * easeOutQuart Easing Function
           * @param  {number} t - current time
           * @param  {number} b - start value
           * @param  {number} c - change in value
           * @param  {number} d - duration
           * @return {number} - calculated value
           */

          function easeOutQuart(t, b, c, d) {
            t /= d;
            t--;
            return -c * (t * t * t * t - 1) + b;
          }
          /**
           * Merge two object
           *
           * @param  {object} obj1
           * @param  {object} obj2
           * @return {object} merged object
           */

          function mergeObject(obj1, obj2) {
            var obj3 = {};
            Object.keys(obj1).forEach(function (propertyName) {
              obj3[propertyName] = obj1[propertyName];
            });
            Object.keys(obj2).forEach(function (propertyName) {
              obj3[propertyName] = obj2[propertyName];
            });
            return obj3;
          }

          /**
           * Converts camel case to kebab case
           * @param  {string} val the value to be converted
           * @return {string} the converted value
           */

          function kebabCase(val) {
            return val.replace(/([A-Z])/g, function ($1) {
              return "-" + $1.toLowerCase();
            });
          }

          /**
           * Count a number of item scrolled top
           * @param  {Window|HTMLElement} container
           * @return {number}
           */

          function countScrollTop(container) {
            if (container instanceof HTMLElement) {
              return container.scrollTop;
            }

            return container.pageYOffset;
          }

          /**
           * MoveTo Constructor
           * @param {object} options Options
           * @param {object} easeFunctions Custom ease functions
           */

          function MoveTo() {
            var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
            var easeFunctions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
            this.options = mergeObject(defaults, options);
            this.easeFunctions = mergeObject(
              {
                easeOutQuart: easeOutQuart,
              },
              easeFunctions
            );
          }
          /**
           * Register a dom element as trigger
           * @param  {HTMLElement} dom Dom trigger element
           * @param  {function} callback Callback function
           * @return {function|void} unregister function
           */

          MoveTo.prototype.registerTrigger = function (dom, callback) {
            var _this = this;

            if (!dom) {
              return;
            }

            var href = dom.getAttribute("href") || dom.getAttribute("data-target"); // The element to be scrolled

            var target = href && href !== "#" ? document.getElementById(href.substring(1)) : document.body;
            var options = mergeObject(this.options, _getOptionsFromTriggerDom(dom, this.options));

            if (typeof callback === "function") {
              options.callback = callback;
            }

            var listener = function listener(e) {
              e.preventDefault();

              _this.move(target, options);
            };

            dom.addEventListener("click", listener, false);
            return function () {
              return dom.removeEventListener("click", listener, false);
            };
          };
          /**
           * Move
           * Scrolls to given element by using easeOutQuart function
           * @param  {HTMLElement|number} target Target element to be scrolled or target position
           * @param  {object} options Custom options
           */

          MoveTo.prototype.move = function (target) {
            var _this2 = this;

            var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

            if (target !== 0 && !target) {
              return;
            }

            options = mergeObject(this.options, options);
            var distance = typeof target === "number" ? target : target.getBoundingClientRect().top;
            var from = countScrollTop(options.container);
            var startTime = null;
            var lastYOffset;
            distance -= options.tolerance; // rAF loop

            var loop = function loop(currentTime) {
              var currentYOffset = countScrollTop(_this2.options.container);

              if (!startTime) {
                // To starts time from 1, we subtracted 1 from current time
                // If time starts from 1 The first loop will not do anything,
                // because easing value will be zero
                startTime = currentTime - 1;
              }

              var timeElapsed = currentTime - startTime;

              if (lastYOffset) {
                if ((distance > 0 && lastYOffset > currentYOffset) || (distance < 0 && lastYOffset < currentYOffset)) {
                  return options.callback(target);
                }
              }

              lastYOffset = currentYOffset;

              var val = _this2.easeFunctions[options.easing](timeElapsed, from, distance, options.duration);

              options.container.scroll(0, val);

              if (timeElapsed < options.duration) {
                window.requestAnimationFrame(loop);
              } else {
                options.container.scroll(0, distance + from);
                options.callback(target);
              }
            };

            window.requestAnimationFrame(loop);
          };
          /**
           * Adds custom ease function
           * @param {string}   name Ease function name
           * @param {function} fn   Ease function
           */

          MoveTo.prototype.addEaseFunction = function (name, fn) {
            this.easeFunctions[name] = fn;
          };
          /**
           * Returns options which created from trigger dom element
           * @param  {HTMLElement} dom Trigger dom element
           * @param  {object} options The instance's options
           * @return {object} The options which created from trigger dom element
           */

          function _getOptionsFromTriggerDom(dom, options) {
            var domOptions = {};
            Object.keys(options).forEach(function (key) {
              var value = dom.getAttribute("data-mt-".concat(kebabCase(key)));

              if (value) {
                domOptions[key] = isNaN(value) ? value : parseInt(value, 10);
              }
            });
            return domOptions;
          }

          return MoveTo;
        })();

        if (true) {
          module.exports = MoveTo;
        } else {
        }

        /***/
      },

    /******/
  }
);
//# sourceMappingURL=main.min.js.map
